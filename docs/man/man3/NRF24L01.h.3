.TH "src/Wireless/NRF24L01.h" 3 "Thu May 25 2017" "Version 0.2" "SensorNode" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/Wireless/NRF24L01.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'avr/io\&.h'\fP
.br
\fC#include <avr/pgmspace\&.h>\fP
.br
\fC#include '\&.\&./IO/IO\&.hpp'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBNRF24L01\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBNRF24L01_PORT\fP   PORTB"
.br
.ti -1c
.RI "#define \fBNRF24L01_RF24_PA_MIN\fP   1"
.br
.ti -1c
.RI "#define \fBNRF24L01_RF24_PA_LOW\fP   2"
.br
.ti -1c
.RI "#define \fBNRF24L01_RF24_PA_HIGH\fP   3"
.br
.ti -1c
.RI "#define \fBNRF24L01_RF24_PA_MAX\fP   4"
.br
.ti -1c
.RI "#define \fBNRF24L01_RF24_SPEED_250KBPS\fP   1"
.br
.ti -1c
.RI "#define \fBNRF24L01_RF24_SPEED_1MBPS\fP   2"
.br
.ti -1c
.RI "#define \fBNRF24L01_RF24_SPEED_2MBPS\fP   3"
.br
.ti -1c
.RI "#define \fBNRF24L01_RF24_CRC_DISABLED\fP   1"
.br
.ti -1c
.RI "#define \fBNRF24L01_RF24_CRC_8\fP   2"
.br
.ti -1c
.RI "#define \fBNRF24L01_RF24_CRC_16\fP   3"
.br
.ti -1c
.RI "#define \fBrf24_max\fP(a,  b)   (a>b?a:b)"
.br
.ti -1c
.RI "#define \fBrf24_min\fP(a,  b)   (a<b?a:b)"
.br
.ti -1c
.RI "#define \fBNRF24L01_RETR\fP   (0b0100 << NRF24L01_REG_ARD) | (0b0111 << NRF24L01_REG_ARC)"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBrf24_pa_dbm_e\fP { \fBRF24_PA_MIN\fP = 0, \fBRF24_PA_LOW\fP, \fBRF24_PA_HIGH\fP, \fBRF24_PA_MAX\fP, \fBRF24_PA_ERROR\fP }"
.br
.ti -1c
.RI "enum \fBrf24_datarate_e\fP { \fBRF24_1MBPS\fP = 0, \fBRF24_2MBPS\fP, \fBRF24_250KBPS\fP }"
.br
.ti -1c
.RI "enum \fBrf24_crclength_e\fP { \fBRF24_CRC_DISABLED\fP = 0, \fBRF24_CRC_8\fP, \fBRF24_CRC_16\fP }"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define NRF24L01_PORT   PORTB"
\fBNRF24L01\&.h\fP
.PP
Created on: Nov 14, 2016 Author: Matthias Minx
.PP
based on the Code of:
.PP
nrf24l01 lib 0x02 Copyright (C) 2011 J\&. Coliz maniacbug@ymail.com
.PP
This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License version 2 as published by the Free Software Foundation\&.
.PP
References:
.IP "\(bu" 2
This library is based upon nRF24L01 avr lib by Stefan Engelke http://www.tinkerer.eu/AVRLib/nRF24L01
.IP "\(bu" 2
and arduino library 2011 by J\&. Coliz http://maniacbug.github.com/RF24
.PP
Released under GPLv3\&. Please refer to LICENSE file for licensing information\&. 
.PP

.SS "#define NRF24L01_RETR   (0b0100 << NRF24L01_REG_ARD) | (0b0111 << NRF24L01_REG_ARC)"

.SS "#define NRF24L01_RF24_CRC_16   3"

.SS "#define NRF24L01_RF24_CRC_8   2"

.SS "#define NRF24L01_RF24_CRC_DISABLED   1"

.SS "#define NRF24L01_RF24_PA_HIGH   3"

.SS "#define NRF24L01_RF24_PA_LOW   2"

.SS "#define NRF24L01_RF24_PA_MAX   4"

.SS "#define NRF24L01_RF24_PA_MIN   1"

.SS "#define NRF24L01_RF24_SPEED_1MBPS   2"

.SS "#define NRF24L01_RF24_SPEED_250KBPS   1"

.SS "#define NRF24L01_RF24_SPEED_2MBPS   3"

.SS "#define rf24_max(a, b)   (a>b?a:b)"

.SS "#define rf24_min(a, b)   (a<b?a:b)"

.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBrf24_crclength_e\fP"
CRC Length\&. How big (if any) of a CRC is included\&.
.PP
For use with setCRCLength() 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIRF24_CRC_DISABLED \fP\fP
.TP
\fB\fIRF24_CRC_8 \fP\fP
.TP
\fB\fIRF24_CRC_16 \fP\fP
.SS "enum \fBrf24_datarate_e\fP"
Data rate\&. How fast data moves through the air\&.
.PP
For use with setDataRate() 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIRF24_1MBPS \fP\fP
.TP
\fB\fIRF24_2MBPS \fP\fP
.TP
\fB\fIRF24_250KBPS \fP\fP
.SS "enum \fBrf24_pa_dbm_e\fP"
Power Amplifier level\&.
.PP
For use with setPALevel() 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIRF24_PA_MIN \fP\fP
.TP
\fB\fIRF24_PA_LOW \fP\fP
.TP
\fB\fIRF24_PA_HIGH \fP\fP
.TP
\fB\fIRF24_PA_MAX \fP\fP
.TP
\fB\fIRF24_PA_ERROR \fP\fP
.SH "Author"
.PP 
Generated automatically by Doxygen for SensorNode from the source code\&.
