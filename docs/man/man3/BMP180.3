.TH "BMP180" 3 "Thu May 25 2017" "Version 0.2" "SensorNode" \" -*- nroff -*-
.ad l
.nh
.SH NAME
BMP180 \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <BMP180\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBBMP180\fP ()"
.br
.ti -1c
.RI "\fBBMP180\fP (\fBI2C\fP &)"
.br
.ti -1c
.RI "\fBBMP180_RETURN_FUNCTION_TYPE\fP \fBInit\fP ()"
.br
.ti -1c
.RI "void \fBGetTemperature\fP ()"
.br
.ti -1c
.RI "void \fBGetPressure\fP ()"
.br
.ti -1c
.RI "void \fBGetTempPressure\fP ()"
.br
.ti -1c
.RI "void \fBGetTempPressureString\fP (char *tempPresStr)"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "\fBBMP180_RETURN_FUNCTION_TYPE\fP \fBGetCalibrationParam\fP ()"
.br
.RI "\fIthis function used for read the calibration parameter from the register \fP"
.ti -1c
.RI "\fBs16\fP \fBGetTemperature\fP (\fBu32\fP val_uncomp_temp_u32)"
.br
.RI "\fIthis API is used to calculate the true temperature using the uncompensated temperature(ut) \fP"
.ti -1c
.RI "\fBs32\fP \fBGetPressure\fP (\fBu32\fP val_uncomp_pressure_u32)"
.br
.RI "\fIthis API is used to calculate the true pressure using the uncompensated pressure(up) \fP"
.ti -1c
.RI "\fBu16\fP \fBGetuncompTemperature\fP (void)"
.br
.RI "\fIthis API is used to read the uncompensated temperature(ut) from the register \fP"
.ti -1c
.RI "\fBu32\fP \fBGetuncompPressure\fP (void)"
.br
.RI "\fIthis API is used to read the uncompensated pressure(up) from the register \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBI2C\fP \fBi2c\fP"
.br
.ti -1c
.RI "int32_t \fBtemperature\fP"
.br
.ti -1c
.RI "int32_t \fBpressure\fP"
.br
.in -1c
.SS "Static Private Attributes"

.in +1c
.ti -1c
.RI "static struct \fBbmp180_t\fP * \fBp_bmp180\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "BMP180::BMP180 ()"
\fBBMP180\&.cpp\fP
.PP
Created on: 27 Mar 2017 Author: matthias 
.SS "BMP180::BMP180 (\fBI2C\fP & i2cInterface)"

.SH "Member Function Documentation"
.PP 
.SS "\fBBMP180_RETURN_FUNCTION_TYPE\fP BMP180::GetCalibrationParam ()\fC [private]\fP"

.PP
this function used for read the calibration parameter from the register Parameter MSB LSB bit  AC1 0xAA 0xAB 0 to 7 AC2 0xAC 0xAD 0 to 7 AC3 0xAE 0xAF 0 to 7 AC4 0xB0 0xB1 0 to 7 AC5 0xB2 0xB3 0 to 7 AC6 0xB4 0xB5 0 to 7 B1 0xB6 0xB7 0 to 7 B2 0xB8 0xB9 0 to 7 MB 0xBA 0xBB 0 to 7 MC 0xBC 0xBD 0 to 7 MD 0xBE 0xBF 0 to 7 
.PP
\fBReturns:\fP
.RS 4
results of bus communication function 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fI0\fP -> Success 
.br
\fI-1\fP -> Error 
.RE
.PP

.SS "\fBs32\fP BMP180::GetPressure (\fBu32\fP val_uncomp_pressure_u32)\fC [private]\fP"

.PP
this API is used to calculate the true pressure using the uncompensated pressure(up) 
.PP
\fBNote:\fP
.RS 4
For reading the up data refer : bmp180_read_up()
.RE
.PP
\fBParameters:\fP
.RS 4
\fIv_uncomp_pressure_u32\fP the value of uncompensated pressure
.RE
.PP
\fBReturns:\fP
.RS 4
Return the value of pressure in steps of 1\&.0 Pa 
.RE
.PP

.SS "void BMP180::GetPressure ()"

.SS "\fBs16\fP BMP180::GetTemperature (\fBu32\fP val_uncomp_temp_u32)\fC [private]\fP"

.PP
this API is used to calculate the true temperature using the uncompensated temperature(ut) 
.PP
\fBNote:\fP
.RS 4
For reading the ut data refer : bmp180_read_ut()
.RE
.PP
\fBParameters:\fP
.RS 4
\fIv_uncomp_temperature_u32\fP the value of uncompensated temperature
.RE
.PP
\fBReturns:\fP
.RS 4
Return the temperature in steps of 0\&.1 deg Celsius 
.RE
.PP

.SS "void BMP180::GetTemperature ()"
init and calibrate 
.SS "void BMP180::GetTempPressure ()"

.SS "void BMP180::GetTempPressureString (char * tempPresStr)"

.SS "\fBu32\fP BMP180::GetuncompPressure (void)\fC [private]\fP"

.PP
this API is used to read the uncompensated pressure(up) from the register 
.PP
\fBNote:\fP
.RS 4
0xF6(MSB) bit from 0 to 7 
.PP
0xF7(LSB) bit from 0 to 7 
.PP
0xF8(LSB) bit from 3 to 7
.RE
.PP
\fBReturns:\fP
.RS 4
results of bus communication function 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fI0\fP -> Success 
.br
\fI-1\fP -> Error 
.RE
.PP

.SS "\fBu16\fP BMP180::GetuncompTemperature (void)\fC [private]\fP"

.PP
this API is used to read the uncompensated temperature(ut) from the register 
.PP
\fBNote:\fP
.RS 4
0xF6(MSB) bit from 0 to 7 
.PP
0xF7(LSB) bit from 0 to 7
.RE
.PP
\fBReturns:\fP
.RS 4
results of bus communication function 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fI0\fP -> Success 
.br
\fI-1\fP -> Error 
.RE
.PP

.SS "\fBBMP180_RETURN_FUNCTION_TYPE\fP BMP180::Init (void)"

.SH "Member Data Documentation"
.PP 
.SS "\fBI2C\fP BMP180::i2c\fC [private]\fP"

.SS "struct \fBbmp180_t\fP* BMP180::p_bmp180\fC [static]\fP, \fC [private]\fP"

.SS "int32_t BMP180::pressure\fC [private]\fP"

.SS "int32_t BMP180::temperature\fC [private]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for SensorNode from the source code\&.
