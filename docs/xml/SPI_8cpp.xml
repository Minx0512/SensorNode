<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="SPI_8cpp" kind="file" language="C++">
    <compoundname>SPI.cpp</compoundname>
    <includes refid="SPI_8h" local="yes">SPI.h</includes>
    <includes local="no">avr/io.h</includes>
    <includes local="no">avr/interrupt.h</includes>
    <incdepgraph>
      <node id="198">
        <label>avr/interrupt.h</label>
      </node>
      <node id="196">
        <label>SPI.h</label>
        <link refid="SPI_8h"/>
        <childnode refid="197" relation="include">
        </childnode>
      </node>
      <node id="197">
        <label>avr/io.h</label>
      </node>
      <node id="195">
        <label>src/IO/SPI.cpp</label>
        <link refid="SPI.cpp"/>
        <childnode refid="196" relation="include">
        </childnode>
        <childnode refid="197" relation="include">
        </childnode>
        <childnode refid="198" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Project: SensorNode</para><para><ref refid="SPI_8cpp" kindref="compound">SPI.cpp</ref></para><para>Created on: Nov 12, 2016</para><para>Author: Matthias Minx</para><para>Revision: 1 </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="19"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="SPI_8h" kindref="compound">SPI.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;avr/io.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;avr/interrupt.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classSPI_1a2ba081c29fbdecc704c6bf00b24d5205" refkind="member"><highlight class="normal"><ref refid="classSPI_1a2ba081c29fbdecc704c6bf00b24d5205" kindref="member">SPI::SPI</ref>()<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//spi<sp/>ports</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__AVR_ATmega328P__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSPI_1a5dca744360bf2b10d74ab512f2fb71ea" kindref="member">SPI_DDR</ref><sp/>=&amp;DDRB;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SPI_PORT<sp/>=<sp/>&amp;PORTB;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSPI_1a6fefdb147a2789fe10efb13f8100235c" kindref="member">SPI_MISO</ref><sp/>=<sp/>PB4;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSPI_1a10159404dbabef20333fe73f69a3fca6" kindref="member">SPI_MOSI</ref><sp/>=<sp/>PB3;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSPI_1ad9ff914a9831b004b1f8fa5368558e01" kindref="member">SPI_SCK</ref><sp/>=<sp/>PB5;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSPI_1ad4cb7d5cd46647baf68bb98a0e06e2aa" kindref="member">SPI_SS</ref><sp/>=<sp/>PB2;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classSPI_1a32722ff55ed030eb70b8a71fa19f2436" refkind="member"><highlight class="normal"><ref refid="classSPI_1a2ba081c29fbdecc704c6bf00b24d5205" kindref="member">SPI::SPI</ref>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/>&amp;DDR,uint8_t<sp/>MISO,<sp/>uint8_t<sp/>MOSI,uint8_t<sp/>SCK,uint8_t<sp/>SS){</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//spi<sp/>ports</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="classSPI_1a5dca744360bf2b10d74ab512f2fb71ea" kindref="member">SPI_DDR</ref><sp/>=&amp;DDR;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SPI_PORT<sp/>=<sp/>&amp;PORT;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="classSPI_1a6fefdb147a2789fe10efb13f8100235c" kindref="member">SPI_MISO</ref><sp/>=<sp/>MISO;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="classSPI_1a10159404dbabef20333fe73f69a3fca6" kindref="member">SPI_MOSI</ref><sp/>=<sp/>MOSI;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="classSPI_1ad9ff914a9831b004b1f8fa5368558e01" kindref="member">SPI_SCK</ref><sp/>=<sp/>SCK;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="classSPI_1ad4cb7d5cd46647baf68bb98a0e06e2aa" kindref="member">SPI_SS</ref><sp/>=<sp/>SS;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classSPI_1a7e28e3328e32b650ead0f7640cee6e81" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSPI_1a7e28e3328e32b650ead0f7640cee6e81" kindref="member">SPI::Init</ref>()<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>SPI_DDR<sp/>&amp;=<sp/>~((1&lt;&lt;SPI_MOSI)<sp/>|<sp/>(1&lt;&lt;SPI_MISO)<sp/>|<sp/>(1&lt;&lt;SPI_SS)<sp/>|<sp/>(1&lt;&lt;SPI_SCK));<sp/>//input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="classSPI_1a5dca744360bf2b10d74ab512f2fb71ea" kindref="member">SPI_DDR</ref><sp/>|=<sp/>((1&lt;&lt;<ref refid="classSPI_1a10159404dbabef20333fe73f69a3fca6" kindref="member">SPI_MOSI</ref>)<sp/>|<sp/>(1&lt;&lt;<ref refid="classSPI_1ad4cb7d5cd46647baf68bb98a0e06e2aa" kindref="member">SPI_SS</ref>)<sp/>|<sp/>(1&lt;&lt;<ref refid="classSPI_1ad9ff914a9831b004b1f8fa5368558e01" kindref="member">SPI_SCK</ref>));<sp/></highlight><highlight class="comment">//output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="classSPI_1a5dca744360bf2b10d74ab512f2fb71ea" kindref="member">SPI_DDR</ref><sp/>&amp;=<sp/>~(1&lt;&lt;<ref refid="classSPI_1a6fefdb147a2789fe10efb13f8100235c" kindref="member">SPI_MISO</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>SPCR<sp/>=<sp/>((1&lt;&lt;SPE)|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SPI<sp/>Enable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0&lt;&lt;SPIE)|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SPI<sp/>Interupt<sp/>Enable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0&lt;&lt;DORD)|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Data<sp/>Order<sp/>(0:MSB<sp/>first<sp/>/<sp/>1:LSB<sp/>first)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1&lt;&lt;MSTR)|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Master/Slave<sp/>select</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0&lt;&lt;SPR1)|(1&lt;&lt;SPR0)|<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SPI<sp/>Clock<sp/>Rate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0&lt;&lt;CPOL)|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clock<sp/>Polarity<sp/>(0:SCK<sp/>low<sp/>/<sp/>1:SCK<sp/>hi<sp/>when<sp/>idle)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0&lt;&lt;CPHA));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clock<sp/>Phase<sp/>(0:leading<sp/>/<sp/>1:trailing<sp/>edge<sp/>sampling)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>SPSR<sp/>=<sp/>(1&lt;&lt;SPI2X);<sp/></highlight><highlight class="comment">//<sp/>Double<sp/>SPI<sp/>Speed<sp/>Bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>sei();</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="classSPI_1ad2c97b15ee0417c355a899c28d2efa5d" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="classSPI_1ad2c97b15ee0417c355a899c28d2efa5d" kindref="member">SPI::WriteReadbyte</ref>(uint8_t<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>SPDR<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!(SPSR<sp/>&amp;<sp/>(1&lt;&lt;SPIF)));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPDR;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/IO/SPI.cpp"/>
  </compounddef>
</doxygen>
