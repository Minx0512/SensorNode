<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="ReadSensor_8py" kind="file" language="Python">
    <compoundname>ReadSensor.py</compoundname>
    <innernamespace refid="namespaceReadSensor">ReadSensor</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>subprocess</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>bluetooth</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>BluetoothConn<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>NodeProtocol<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>xml.dom.minidom<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>parse,<sp/>parseString</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">getText(nodelist):</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/>rc<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>node<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>nodelist:</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>node.nodeType<sp/>==<sp/>node.TEXT_NODE:</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/>rc.append(node.data)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">.join(rc)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">handleTags(dom,tag):</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/>items<sp/>=<sp/>dom.getElementsByTagName(tag)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/>t<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>item<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>items:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>t.append(</highlight><highlight class="stringliteral">u&apos;{0}&apos;</highlight><highlight class="normal">.format(getText(item.childNodes)).encode(</highlight><highlight class="stringliteral">&apos;utf-8&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">GetNRFConfig(sock):</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/>SendData(sock,</highlight><highlight class="stringliteral">&apos;{0}\r\n&apos;</highlight><highlight class="normal">.format(NPGetNRGConfig()))</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ReceiveData(sock,</highlight><highlight class="stringliteral">&quot;|+end\r\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">GetTempDS18B20(sock):</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/>SendData(sock,</highlight><highlight class="stringliteral">&apos;{0}\r\n&apos;</highlight><highlight class="normal">.format(NPGetSensorDataTempDS18B20()))</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ReceiveData(sock,</highlight><highlight class="stringliteral">&quot;|+end\r\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">GetTempHumidDHT22(sock):</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/>SendData(sock,</highlight><highlight class="stringliteral">&apos;{0}\r\n&apos;</highlight><highlight class="normal">.format(NPGetSensorDataTempHumidityDHT22()))</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ReceiveData(sock,</highlight><highlight class="stringliteral">&quot;|+end\r\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">GetTempDHT22(sock):</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/>SendData(sock,</highlight><highlight class="stringliteral">&apos;{0}\r\n&apos;</highlight><highlight class="normal">.format(NPGetSensorDataTempDHT22()))</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ReceiveData(sock,</highlight><highlight class="stringliteral">&quot;|+end\r\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">GetHumidityDHT22(sock):</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/>SendData(sock,</highlight><highlight class="stringliteral">&apos;{0}\r\n&apos;</highlight><highlight class="normal">.format(NPGetSensorDataHumidityDHT22()))</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ReceiveData(sock,</highlight><highlight class="stringliteral">&quot;|+end\r\n&quot;</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">GetLightsense(sock):</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/>SendData(sock,</highlight><highlight class="stringliteral">&apos;{0}\r\n&apos;</highlight><highlight class="normal">.format(NPGetSensorDataLightsense()))</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ReceiveData(sock,</highlight><highlight class="stringliteral">&quot;|+end\r\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">GetMovement(sock):</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/>SendData(sock,</highlight><highlight class="stringliteral">&apos;{0}\r\n&apos;</highlight><highlight class="normal">.format(NPGetSensorDataMove()))</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ReceiveData(sock,</highlight><highlight class="stringliteral">&quot;|+end\r\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">GetRemoteSensors(socks):</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>SendData(sock,</highlight><highlight class="stringliteral">&apos;{0}\r\n&apos;</highlight><highlight class="normal">.format(NPGetSensorDataRemote()))</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ReceiveData(sock,</highlight><highlight class="stringliteral">&quot;|+end\r\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">##########################################################################<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">Move(moveStr):</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/>dom<sp/>=<sp/>parseString(moveStr)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;{0}&apos;</highlight><highlight class="normal">.format(handleTags(dom,</highlight><highlight class="stringliteral">&apos;mv&apos;</highlight><highlight class="normal">)[0]).encode(</highlight><highlight class="stringliteral">&apos;utf-8&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">Temp(tempStr):</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/>dom<sp/>=<sp/>parseString(tempStr)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;{0}&apos;</highlight><highlight class="normal">.format(handleTags(dom,</highlight><highlight class="stringliteral">&apos;T&apos;</highlight><highlight class="normal">)[0]).encode(</highlight><highlight class="stringliteral">&apos;utf-8&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">Humidity(humStr):</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/>dom<sp/>=<sp/>parseString(humStr)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;{0}&apos;</highlight><highlight class="normal">.format(handleTags(dom,</highlight><highlight class="stringliteral">&apos;H&apos;</highlight><highlight class="normal">)[0]).encode(</highlight><highlight class="stringliteral">&apos;utf-8&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">RemoteLight(rsStr,idx):</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/>dom<sp/>=<sp/>parseString(rsStr)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;{0}&apos;</highlight><highlight class="normal">.format(handleTags(dom,</highlight><highlight class="stringliteral">&apos;L&apos;</highlight><highlight class="normal">)[idx]).encode(</highlight><highlight class="stringliteral">&apos;utf-8&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">LightsInside(lightStr):</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/>dom<sp/>=<sp/>parseString(lightStr)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;{0}&apos;</highlight><highlight class="normal">.format(handleTags(dom,</highlight><highlight class="stringliteral">&apos;NSL19M51&apos;</highlight><highlight class="normal">)[0]).encode(</highlight><highlight class="stringliteral">&apos;utf-8&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">LightsOn(lightVal):</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/>t<sp/>=<sp/>time.strftime(</highlight><highlight class="stringliteral">&quot;%I:%M:%S<sp/>%p&quot;</highlight><highlight class="normal">,time.localtime())</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/>st<sp/>=<sp/>subprocess.check_output([</highlight><highlight class="stringliteral">&apos;./Lights.sh<sp/>c<sp/>0<sp/>on&apos;</highlight><highlight class="normal">],shell=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;{0}<sp/>:<sp/>{1}<sp/>|<sp/>{2}&quot;</highlight><highlight class="normal">.format(t,st.rstrip(),lightVal)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">LightsOff(lightVal):</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/>t<sp/>=<sp/>time.strftime(</highlight><highlight class="stringliteral">&quot;%I:%M:%S<sp/>%p&quot;</highlight><highlight class="normal">,time.localtime())</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/>st<sp/>=<sp/>subprocess.check_output([</highlight><highlight class="stringliteral">&apos;./Lights.sh<sp/>c<sp/>0<sp/>off&apos;</highlight><highlight class="normal">],shell=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;{0}<sp/>:<sp/>{1}<sp/>|<sp/>{2}&quot;</highlight><highlight class="normal">.format(t,st.rstrip(),lightVal)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">SetLightColor(color):</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/>t<sp/>=<sp/>time.strftime(</highlight><highlight class="stringliteral">&quot;%I:%M<sp/>%p&quot;</highlight><highlight class="normal">,time.localtime())</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/>st<sp/>=<sp/>subprocess.check_output(</highlight><highlight class="stringliteral">&apos;./Lights.sh<sp/>c<sp/>0<sp/>c<sp/>%s&apos;</highlight><highlight class="normal"><sp/>%<sp/>color,<sp/>shell=1)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;{0}<sp/>:<sp/>{1}&quot;</highlight><highlight class="normal">.format(t,st.rstrip())</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">SetBrightnes(level):</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/>t<sp/>=<sp/>time.strftime(</highlight><highlight class="stringliteral">&quot;%I:%M<sp/>%p&quot;</highlight><highlight class="normal">,time.localtime())</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/>st<sp/>=<sp/>subprocess.check_output(</highlight><highlight class="stringliteral">&apos;./Lights.sh<sp/>c<sp/>0<sp/>B<sp/>%s&apos;</highlight><highlight class="normal"><sp/>%<sp/>level,<sp/>shell=1)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;{0}<sp/>:<sp/>{1}&quot;</highlight><highlight class="normal">.format(t,st.rstrip())</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/></highlight></codeline>
    </programlisting>
    <location file="Python/ReadSensor.py"/>
  </compounddef>
</doxygen>
