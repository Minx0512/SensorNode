<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="Photoresistor_8cpp" kind="file" language="C++">
    <compoundname>Photoresistor.cpp</compoundname>
    <includes refid="Photoresistor_8h" local="yes">Photoresistor.h</includes>
    <includes local="no">avr/io.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdlib.h</includes>
    <incdepgraph>
      <node id="435">
        <label>stdlib.h</label>
      </node>
      <node id="431">
        <label>Photoresistor.h</label>
        <link refid="Photoresistor_8h"/>
        <childnode refid="432" relation="include">
        </childnode>
      </node>
      <node id="432">
        <label>avr/io.h</label>
      </node>
      <node id="434">
        <label>string.h</label>
      </node>
      <node id="430">
        <label>src/Sensors/Photoresistor.cpp</label>
        <link refid="Photoresistor.cpp"/>
        <childnode refid="431" relation="include">
        </childnode>
        <childnode refid="432" relation="include">
        </childnode>
        <childnode refid="433" relation="include">
        </childnode>
        <childnode refid="434" relation="include">
        </childnode>
        <childnode refid="435" relation="include">
        </childnode>
      </node>
      <node id="433">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceSensors">Sensors</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Project: <ref refid="namespaceSensorNode" kindref="compound">SensorNode</ref></para><para><ref refid="Photoresistor_8cpp" kindref="compound">Photoresistor.cpp</ref></para><para>Created on: Nov 12, 2016</para><para>Author: Matthias Minx</para><para>Revision: 0.2 </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="18"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Photoresistor_8h" kindref="compound">Photoresistor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;avr/io.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceSensors" kindref="compound">Sensors</ref><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classSensors_1_1Photoresistor_1a636b09df1c219714314a691bef87a6bd" refkind="member"><highlight class="normal"><ref refid="classSensors_1_1Photoresistor_1a636b09df1c219714314a691bef87a6bd" kindref="member">Photoresistor::Photoresistor</ref>()<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>Auto-generated<sp/>constructor<sp/>stub</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSensors_1_1Photoresistor_1a03306f2c1b5a7d65b46178dcc25c1c9a" kindref="member">setType</ref>(0);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSensors_1_1Photoresistor_1a46314a8e495c2ad308fe89935b1c2574" kindref="member">setPort</ref>(0x00);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Init();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classSensors_1_1Photoresistor_1a53ca472fb36f5ce8b9e199ddcc1ea188" refkind="member"><highlight class="normal"><ref refid="classSensors_1_1Photoresistor_1a636b09df1c219714314a691bef87a6bd" kindref="member">Photoresistor::Photoresistor</ref>(uint8_t<sp/>port)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>Auto-generated<sp/>constructor<sp/>stub</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSensors_1_1Photoresistor_1a03306f2c1b5a7d65b46178dcc25c1c9a" kindref="member">setType</ref>(0);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSensors_1_1Photoresistor_1a46314a8e495c2ad308fe89935b1c2574" kindref="member">setPort</ref>(port);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Init();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classSensors_1_1Photoresistor_1a62a0993f8a84a827b843d9bcdded089e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSensors_1_1Photoresistor_1a62a0993f8a84a827b843d9bcdded089e" kindref="member">Photoresistor::Init</ref>(){</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ADCSRA<sp/>=<sp/>(1&lt;&lt;<sp/>ADEN)<sp/>|<sp/>(1&lt;&lt;ADPS1)<sp/>|<sp/>(1&lt;&lt;ADPS2);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ADMUX<sp/>=<sp/><ref refid="classSensors_1_1Photoresistor_1a43797415ff86174f92b44e69046e3de7" kindref="member">ADPort</ref>;<sp/></highlight><highlight class="comment">//use<sp/>Port<sp/>ADCx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ADMUX<sp/>|=<sp/>(1&lt;&lt;REFS0);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classSensors_1_1Photoresistor_1a46314a8e495c2ad308fe89935b1c2574" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSensors_1_1Photoresistor_1a46314a8e495c2ad308fe89935b1c2574" kindref="member">Photoresistor::setPort</ref>(uint8_t<sp/>port){</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classSensors_1_1Photoresistor_1a43797415ff86174f92b44e69046e3de7" kindref="member">ADPort</ref><sp/>=<sp/>port;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classSensors_1_1Photoresistor_1a03306f2c1b5a7d65b46178dcc25c1c9a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSensors_1_1Photoresistor_1a03306f2c1b5a7d65b46178dcc25c1c9a" kindref="member">Photoresistor::setType</ref>(uint8_t<sp/>t){</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classSensors_1_1Photoresistor_1abdd598255c0051cbc8db8a457cd29dc8" kindref="member">type</ref><sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classSensors_1_1Photoresistor_1aaee5f77d43f8a7d3175a9bf3e635041d" refkind="member"><highlight class="normal">uint16_t<sp/><ref refid="classSensors_1_1Photoresistor_1aaee5f77d43f8a7d3175a9bf3e635041d" kindref="member">Photoresistor::readADValue</ref>(){</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ADCSRA<sp/>|=<sp/>(1&lt;&lt;ADSC);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(ADCSRA<sp/>&amp;<sp/>(1&lt;&lt;ADSC));</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>ADCW;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(value);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classSensors_1_1Photoresistor_1a06b802026054f93a7b6659db0ffe731e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSensors_1_1Photoresistor_1a06b802026054f93a7b6659db0ffe731e" kindref="member">Photoresistor::GetSensorStringXML</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>valueL<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;1000;i++){</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valueL+=(float)<ref refid="classSensors_1_1Photoresistor_1aaee5f77d43f8a7d3175a9bf3e635041d" kindref="member">readADValue</ref>();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>valueL/=1000;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1ac19b967928c4ef5b461808cbac40840c" kindref="member">str</ref>[10];</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>dtostrf(valueL,4,3,str);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,str);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/Sensors/Photoresistor.cpp"/>
  </compounddef>
</doxygen>
