<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="main_8cpp" kind="file" language="C++">
    <compoundname>main.cpp</compoundname>
    <includes local="no">avr/io.h</includes>
    <includes local="no">util/delay.h</includes>
    <includes local="no">avr/interrupt.h</includes>
    <includes local="no">inttypes.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">avr/eeprom.h</includes>
    <includes local="no">avr/pgmspace.h</includes>
    <includes refid="USART_8h" local="yes">IO/USART.h</includes>
    <includes refid="ParseStrings_8h" local="yes">IO/ParseStrings.h</includes>
    <includes refid="NRF24L01_8h" local="yes">Wireless/NRF24L01.h</includes>
    <includes refid="DS18B20_8h" local="yes">Sensors/DS18B20.h</includes>
    <includes refid="Photoresistor_8h" local="yes">Sensors/Photoresistor.h</includes>
    <incdepgraph>
      <node id="230">
        <label>Sensors/DS18B20.h</label>
        <link refid="DS18B20_8h"/>
        <childnode refid="217" relation="include">
        </childnode>
        <childnode refid="216" relation="include">
        </childnode>
        <childnode refid="221" relation="include">
        </childnode>
        <childnode refid="231" relation="include">
        </childnode>
        <childnode refid="219" relation="include">
        </childnode>
      </node>
      <node id="215">
        <label>src/main.cpp</label>
        <link refid="main.cpp"/>
        <childnode refid="216" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
        <childnode refid="218" relation="include">
        </childnode>
        <childnode refid="219" relation="include">
        </childnode>
        <childnode refid="220" relation="include">
        </childnode>
        <childnode refid="221" relation="include">
        </childnode>
        <childnode refid="222" relation="include">
        </childnode>
        <childnode refid="223" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
        <childnode refid="232" relation="include">
        </childnode>
      </node>
      <node id="228">
        <label>Wireless/NRF24L01.h</label>
        <link refid="NRF24L01_8h"/>
        <childnode refid="216" relation="include">
        </childnode>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
      </node>
      <node id="227">
        <label>stdint.h</label>
      </node>
      <node id="218">
        <label>avr/interrupt.h</label>
      </node>
      <node id="221">
        <label>stdlib.h</label>
      </node>
      <node id="232">
        <label>Sensors/Photoresistor.h</label>
        <link refid="Photoresistor_8h"/>
        <childnode refid="216" relation="include">
        </childnode>
      </node>
      <node id="229">
        <label>../IO/SPI.h</label>
        <link refid="SPI_8h"/>
        <childnode refid="216" relation="include">
        </childnode>
      </node>
      <node id="216">
        <label>avr/io.h</label>
      </node>
      <node id="217">
        <label>util/delay.h</label>
      </node>
      <node id="222">
        <label>string.h</label>
      </node>
      <node id="225">
        <label>IO/USART.h</label>
        <link refid="USART_8h"/>
        <childnode refid="216" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
        <childnode refid="222" relation="include">
        </childnode>
      </node>
      <node id="224">
        <label>avr/pgmspace.h</label>
      </node>
      <node id="226">
        <label>IO/ParseStrings.h</label>
        <link refid="ParseStrings_8h"/>
        <childnode refid="221" relation="include">
        </childnode>
        <childnode refid="222" relation="include">
        </childnode>
        <childnode refid="219" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="227" relation="include">
        </childnode>
      </node>
      <node id="223">
        <label>avr/eeprom.h</label>
      </node>
      <node id="231">
        <label>ctype.h</label>
      </node>
      <node id="220">
        <label>stdio.h</label>
      </node>
      <node id="219">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="main_8cpp_1af332f65aca07c44deeda884c8f6c353c" prot="public" static="no">
        <name>CE</name>
        <initializer>PB1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Chip Enable (CE) for the nRF24L01+ Module </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="45" column="9" bodyfile="src/main.cpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8cpp_1a8df4f3a8a2035df063402ae5f0c1d2f8" prot="public" static="no">
        <name>CSN</name>
        <initializer>PB0</initializer>
        <briefdescription>
<para>Chip Select Not (CSN) for the nRF24L01+ Module. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="46" column="9" bodyfile="src/main.cpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8cpp_1a70d2f38065e15ec8ca4c5144e8365815" prot="public" static="no">
        <name>Sensor_DS18B20</name>
        <initializer>1</initializer>
        <briefdescription>
<para>is a <ref refid="classDS18B20" kindref="compound">DS18B20</ref> temperature Sensor connected to the microcontroller? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="49" column="9" bodyfile="src/main.cpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8cpp_1adecd7bcd3e5fd9d8aff20435fa31780d" prot="public" static="no">
        <name>Sensor_DHT22</name>
        <initializer>0</initializer>
        <briefdescription>
<para>is a <ref refid="classDHT22" kindref="compound">DHT22</ref> temperature and humidity sensor connected? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="50" column="9" bodyfile="src/main.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8cpp_1a836c5fd677da287d2c5fc1b8f8be283e" prot="public" static="no">
        <name>Sensor_Move</name>
        <initializer>1</initializer>
        <briefdescription>
<para>is a movement detector connected? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="51" column="9" bodyfile="src/main.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8cpp_1a1302e578dfa4674d460a42d440c505a1" prot="public" static="no">
        <name>Sensor_LightVoltage</name>
        <initializer>1</initializer>
        <briefdescription>
<para>is a photoresitor connected to a analog input? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="52" column="9" bodyfile="src/main.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8cpp_1a684578846dbea988173b03a4ccf32bc7" prot="public" static="no">
        <name>Sensor_LightLux</name>
        <initializer>0</initializer>
        <briefdescription>
<para>is a digital Lux sensor connected (I2C)? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="53" column="9" bodyfile="src/main.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8cpp_1a8bf6bf97515b582db8d0e241724566a2" prot="public" static="no">
        <name>Sensor_Pressure</name>
        <initializer>0</initializer>
        <briefdescription>
<para>is a pressure sensor connected (I2C)? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="54" column="9" bodyfile="src/main.cpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8cpp_1a73f3f710edd90106325c0c427e712e60" prot="public" static="no">
        <name>NRF_MainNode</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Role of the node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="56" column="9" bodyfile="src/main.cpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8cpp_1ade828ec827ef9a6dd7199e6ef25ad134" prot="public" static="no">
        <name>NRF_SN</name>
        <initializer>0</initializer>
        <briefdescription>
<para>is Slave node? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="57" column="9" bodyfile="src/main.cpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8cpp_1a0b139cee69f4fce411cafa9cd3380433" prot="public" static="no">
        <name>NRF_SNnum</name>
        <initializer>0</initializer>
        <briefdescription>
<para>number of slave nodes </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="58" column="9" bodyfile="src/main.cpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="main_8cpp_1a8529b711d50e5de54deba7c6b1863d14" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t uartRX_flag</definition>
        <argsstring></argsstring>
        <name>uartRX_flag</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Flag received UART message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="72" column="1" bodyfile="src/main.cpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a439ad8ea3b3cc83e6ca8c7625bad49f9" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t flagMovement</definition>
        <argsstring></argsstring>
        <name>flagMovement</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Flag for movement detected. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="73" column="1" bodyfile="src/main.cpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a4e92ed0235dfab5a966c53305989ecbf" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t nrfIntFlag</definition>
        <argsstring></argsstring>
        <name>nrfIntFlag</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Flag for incoming message from the RF module. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="74" column="1" bodyfile="src/main.cpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a557ea16c17e1a3f7a39f32181dc5d531" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char bufferNRF[128][5]</definition>
        <argsstring>[128][5]</argsstring>
        <name>bufferNRF</name>
        <briefdescription>
<para>Buffer for received messages via nRF24L01+ module. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="76" column="1" bodyfile="src/main.cpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a61b4f384283b1a2ea53ac795896b6a53" prot="public" static="no" mutable="no">
        <type>uint8_t EEMEM</type>
        <definition>uint8_t EEMEM firstrun</definition>
        <argsstring></argsstring>
        <name>firstrun</name>
        <briefdescription>
<para>First run after reset/ reflash? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="80" column="1" bodyfile="src/main.cpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1ac92f70960babcaa68482b8ea681bcec8" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char sendSensorStr[]</definition>
        <argsstring>[]</argsstring>
        <name>sendSensorStr</name>
        <initializer>= &quot;/sensor/%s/|%s/|%s&quot;</initializer>
        <briefdescription>
<para>Template for sendSensor string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="82" column="1" bodyfile="src/main.cpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1ad5572274b88d1bfc8a5e057e1132bf90" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char sendSystemStr[]</definition>
        <argsstring>[]</argsstring>
        <name>sendSystemStr</name>
        <initializer>= &quot;/system/%s/|%s/|%s&quot;</initializer>
        <briefdescription>
<para>Tempplate for sendSystem string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="83" column="1" bodyfile="src/main.cpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a19dbb1ae18200033d3316c06ae09b7f7" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char getSystemStr[]</definition>
        <argsstring>[]</argsstring>
        <name>getSystemStr</name>
        <initializer>= &quot;%s|%s|%s&quot;</initializer>
        <briefdescription>
<para>Template for getSystem string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="84" column="1" bodyfile="src/main.cpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1aaeeabc962622e38a59734f975d2734e9" prot="public" static="no" mutable="no">
        <type>uint8_t EEMEM</type>
        <definition>uint8_t EEMEM pipeEnable</definition>
        <argsstring></argsstring>
        <name>pipeEnable</name>
        <briefdescription>
<para>Store RF enabled pipes in EEPROM. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="87" column="1" bodyfile="src/main.cpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a94f95ee5ee779c95ed60e07ae9ea5dc6" prot="public" static="no" mutable="no">
        <type>uint8_t EEMEM</type>
        <definition>uint8_t EEMEM nrfChannel</definition>
        <argsstring></argsstring>
        <name>nrfChannel</name>
        <briefdescription>
<para>Store RF Channel number in EEPROM. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="88" column="1" bodyfile="src/main.cpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a371b432ae65ae3f6d1cc89a0f392c0cb" prot="public" static="no" mutable="no">
        <type>uint8_t EEMEM</type>
        <definition>uint8_t EEMEM nrfACK</definition>
        <argsstring></argsstring>
        <name>nrfACK</name>
        <briefdescription>
<para>Store RF auto acknoledge in EEPROM. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="89" column="1" bodyfile="src/main.cpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a6024fb08e723cdd46a4b3687b7328a3c" prot="public" static="no" mutable="no">
        <type>uint8_t EEMEM</type>
        <definition>uint8_t EEMEM pwrLvl</definition>
        <argsstring></argsstring>
        <name>pwrLvl</name>
        <briefdescription>
<para>Store RF power level in EEPROM. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="90" column="1" bodyfile="src/main.cpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a02938b341e80cec9fb0c90ca7087a355" prot="public" static="no" mutable="no">
        <type>uint8_t EEMEM</type>
        <definition>uint8_t EEMEM dataRate</definition>
        <argsstring></argsstring>
        <name>dataRate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Store RF data rate in EEPROM </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="91" column="1" bodyfile="src/main.cpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1ab2da2e7547f36c6397be13407d26a687" prot="public" static="no" mutable="no">
        <type>uint8_t EEMEM</type>
        <definition>uint8_t EEMEM crcLvl</definition>
        <argsstring></argsstring>
        <name>crcLvl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Store CRC level in EEPROM </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="92" column="1" bodyfile="src/main.cpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1ae62ba57830fc3210edf7d78311e7403e" prot="public" static="no" mutable="no">
        <type>uint64_t EEMEM</type>
        <definition>uint64_t EEMEM mem_adressTx[25]</definition>
        <argsstring>[25]</argsstring>
        <name>mem_adressTx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Array for transmit addresses </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="94" column="1" bodyfile="src/main.cpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1abd46d3d3672467c73c53275003c33c17" prot="public" static="no" mutable="no">
        <type>uint64_t EEMEM</type>
        <definition>uint64_t EEMEM mem_adressRx[5]</definition>
        <argsstring>[5]</argsstring>
        <name>mem_adressRx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Array for receive addresses </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="95" column="1" bodyfile="src/main.cpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1ac19b967928c4ef5b461808cbac40840c" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char str[RX_BUFF]</definition>
        <argsstring>[RX_BUFF]</argsstring>
        <name>str</name>
        <briefdescription>
<para>Receive string Buffer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="97" column="1" bodyfile="src/main.cpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a1b027732838bd645cecfd35415ecb8c6" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t adressRx[]</definition>
        <argsstring>[]</argsstring>
        <name>adressRx</name>
        <initializer>= {0xA0A0A0A0A0,0xA0A0A0A0A1,0xA0A0A0A0A2,0xA0A0A0A0A3,0xA0A0A0A0A4}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>standard Rx address to receive data on </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="102" column="1" bodyfile="src/main.cpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1aa7192a06e3de8d14ce4345527faaf536" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t adressTx[]</definition>
        <argsstring>[]</argsstring>
        <name>adressTx</name>
        <initializer>= {0xB0B0B0B0B0,0xB0B0B0B0C0,0xB0B0B0B0D0,0xB0B0B0B0E0,0xB0B0B0B0F0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tx address to send data to </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="105" column="1" bodyfile="src/main.cpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a4b0f6407730ca2581db1526feda70ea6" prot="public" static="no" mutable="no">
        <type><ref refid="classUSART" kindref="compound">USART</ref></type>
        <definition>USART uart</definition>
        <argsstring></argsstring>
        <name>uart</name>
        <initializer>= <ref refid="classUSART" kindref="compound">USART</ref>(9600)</initializer>
        <briefdescription>
<para>Create new <ref refid="classUSART" kindref="compound">USART</ref> object with a baud rate of 9600. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="119" column="1" bodyfile="src/main.cpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a4d8d5d287d7e4a27644e7c3b83bfcce2" prot="public" static="no" mutable="no">
        <type><ref refid="classNRF24L01" kindref="compound">NRF24L01</ref></type>
        <definition>NRF24L01 nrf</definition>
        <argsstring></argsstring>
        <name>nrf</name>
        <initializer>= <ref refid="classNRF24L01" kindref="compound">NRF24L01</ref>(DDRB, PORTB, <ref refid="main_8cpp_1af332f65aca07c44deeda884c8f6c353c" kindref="member">CE</ref>, <ref refid="main_8cpp_1a8df4f3a8a2035df063402ae5f0c1d2f8" kindref="member">CSN</ref>)</initializer>
        <briefdescription>
<para>Create new NRF242L01 object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="120" column="1" bodyfile="src/main.cpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1aebe9772f1bc160f5bd6e36ec6d174343" prot="public" static="no" mutable="no">
        <type><ref refid="classParseStrings" kindref="compound">ParseStrings</ref></type>
        <definition>ParseStrings ps</definition>
        <argsstring></argsstring>
        <name>ps</name>
        <initializer>= <ref refid="classParseStrings" kindref="compound">ParseStrings</ref>()</initializer>
        <briefdescription>
<para>Create new ParseString object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="121" column="1" bodyfile="src/main.cpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1af23d3ee921f59b64f27b4581ba32eba7" prot="public" static="no" mutable="no">
        <type><ref refid="classDS18B20" kindref="compound">DS18B20</ref></type>
        <definition>DS18B20 ds</definition>
        <argsstring></argsstring>
        <name>ds</name>
        <initializer>= <ref refid="classDS18B20" kindref="compound">DS18B20</ref>(PORTD,DDRD,PIND, PD6)</initializer>
        <briefdescription>
<para>Create new <ref refid="classDS18B20" kindref="compound">DS18B20</ref> object connected to pin PD6. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="127" column="1" bodyfile="src/main.cpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a56be6db06a776b7b88ce899534d45d67" prot="public" static="no" mutable="no">
        <type><ref refid="classPhotoresistor" kindref="compound">Photoresistor</ref></type>
        <definition>Photoresistor pr</definition>
        <argsstring></argsstring>
        <name>pr</name>
        <initializer>= <ref refid="classPhotoresistor" kindref="compound">Photoresistor</ref>(0x00)</initializer>
        <briefdescription>
<para>Create new Photoresitor object connected to the analog output 0x00. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="133" column="1" bodyfile="src/main.cpp" bodystart="133" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="main_8cpp_1aa0dce6d249d81fb85b082273270ba710" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void delay_ms</definition>
        <argsstring>(uint16_t ms)</argsstring>
        <name>delay_ms</name>
        <param>
          <type>uint16_t</type>
          <declname>ms</declname>
        </param>
        <briefdescription>
<para>Delays a certain amount of milliseconds. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ms</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of milliseconds to delay as unsigned integer 16 argument. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="142" column="1" bodyfile="src/main.cpp" bodystart="142" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a0cb304e3b4343bd171a793e59ebd5606" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GetNodeMAC</definition>
        <argsstring>(char *newMAC, uint8_t *nrfMAC)</argsstring>
        <name>GetNodeMAC</name>
        <param>
          <type>char *</type>
          <declname>newMAC</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>nrfMAC</declname>
        </param>
        <briefdescription>
<para>Copies a MAC address from an uint8 array to a char array. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">nrfMAC</parametername>
</parameternamelist>
<parameterdescription>
<para>MAC address uint8 array of the nRF24L01+ module </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">newMAC</parametername>
</parameternamelist>
<parameterdescription>
<para>MAC address char array of the nRF24L01+ module </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="155" column="1" bodyfile="src/main.cpp" bodystart="155" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1af46bdd771d27528209de39fb63e15b46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CreateSensorMAC</definition>
        <argsstring>(char *newMAC, uint8_t *nrfMAC, char *add)</argsstring>
        <name>CreateSensorMAC</name>
        <param>
          <type>char *</type>
          <declname>newMAC</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>nrfMAC</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>add</declname>
        </param>
        <briefdescription>
<para>Combine new MAC address from an uint8 MAC array and a char array to a char array. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">nrfMAC</parametername>
</parameternamelist>
<parameterdescription>
<para>MAC address uint8 array of the nRF24L01+ module </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">newMAC</parametername>
</parameternamelist>
<parameterdescription>
<para>MAC address char array of the sensor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">add</parametername>
</parameternamelist>
<parameterdescription>
<para>Address addition </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="170" column="1" bodyfile="src/main.cpp" bodystart="170" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a87e8f767c8e0f0b39062d3b566a97829" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CreateSensorMAC</definition>
        <argsstring>(char *newMAC, uint64_t nrfMAC, char *add)</argsstring>
        <name>CreateSensorMAC</name>
        <param>
          <type>char *</type>
          <declname>newMAC</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>nrfMAC</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>add</declname>
        </param>
        <briefdescription>
<para>Combine new MAC address from an uint64 MAC address and a char array to a char array. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">nrfMAC</parametername>
</parameternamelist>
<parameterdescription>
<para>MAC address uint64 of the nRF24L01+ module </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">newMAC</parametername>
</parameternamelist>
<parameterdescription>
<para>MAC address char array of the sensor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">add</parametername>
</parameternamelist>
<parameterdescription>
<para>Address addition </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="185" column="1" bodyfile="src/main.cpp" bodystart="185" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1af3f2bf35046819f223de9b818029af1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetupNRF</definition>
        <argsstring>()</argsstring>
        <name>SetupNRF</name>
        <briefdescription>
<para>Setup RF Module. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="203" column="1" bodyfile="src/main.cpp" bodystart="203" bodyend="289"/>
        <references refid="NRF24L01_8h_1a1e4cd0bea93e6b43422855fb0120aacea7d8d09f4a047b7c22655e56c98ca010c" compoundref="NRF24L01_8h" startline="75">RF24_PA_LOW</references>
        <references refid="NRF24L01_8h_1a82745de4aa1251b7561564b3ed1d6522afd01f3fd55247a67c0bcfd459fe17fdf" compoundref="NRF24L01_8h" startline="82">RF24_1MBPS</references>
        <references refid="NRF24L01_8h_1adbe00719f3f835c82bd007081d040a7ea6eeb0379e23be63559106d96ada47a56" compoundref="NRF24L01_8h" startline="89">RF24_CRC_16</references>
        <references refid="main_8cpp_1a61b4f384283b1a2ea53ac795896b6a53" compoundref="main_8cpp" startline="80">firstrun</references>
        <references refid="main_8cpp_1aa7192a06e3de8d14ce4345527faaf536" compoundref="main_8cpp" startline="105">adressTx</references>
        <references refid="main_8cpp_1ae62ba57830fc3210edf7d78311e7403e" compoundref="main_8cpp" startline="94">mem_adressTx</references>
        <references refid="main_8cpp_1a1b027732838bd645cecfd35415ecb8c6" compoundref="main_8cpp" startline="102">adressRx</references>
        <references refid="main_8cpp_1abd46d3d3672467c73c53275003c33c17" compoundref="main_8cpp" startline="95">mem_adressRx</references>
        <references refid="main_8cpp_1a371b432ae65ae3f6d1cc89a0f392c0cb" compoundref="main_8cpp" startline="89">nrfACK</references>
        <references refid="main_8cpp_1a94f95ee5ee779c95ed60e07ae9ea5dc6" compoundref="main_8cpp" startline="88">nrfChannel</references>
        <references refid="main_8cpp_1aaeeabc962622e38a59734f975d2734e9" compoundref="main_8cpp" startline="87">pipeEnable</references>
        <references refid="main_8cpp_1a6024fb08e723cdd46a4b3687b7328a3c" compoundref="main_8cpp" startline="90">pwrLvl</references>
        <references refid="main_8cpp_1a02938b341e80cec9fb0c90ca7087a355" compoundref="main_8cpp" startline="91">dataRate</references>
        <references refid="main_8cpp_1ab2da2e7547f36c6397be13407d26a687" compoundref="main_8cpp" startline="92">crcLvl</references>
        <references refid="classNRF24L01_1a2973773d1a158e1cfbf52198f248c548" compoundref="NRF24L01_8cpp" startline="159" endline="218">NRF24L01::Init</references>
        <references refid="classNRF24L01_1aa8eaf9d5ed604f60a00cd79fed9edad7" compoundref="NRF24L01_8cpp" startline="299" endline="303">NRF24L01::setChannel</references>
        <references refid="classNRF24L01_1a6081dd6dd9cdffbc1c7534ee1824201d" compoundref="NRF24L01_8cpp" startline="800" endline="813">NRF24L01::setCRCLength</references>
        <references refid="classNRF24L01_1a7319961d6048e32546ad5df934bd42d8" compoundref="NRF24L01_8cpp" startline="726" endline="738">NRF24L01::setPALevel</references>
        <references refid="classNRF24L01_1a9db0803c6d87e6ada7febea2240a7b1c" compoundref="NRF24L01_8cpp" startline="745" endline="778">NRF24L01::setDataRate</references>
        <references refid="classNRF24L01_1a33b1c7dd1cad95dae57ef87bf3dce5c8" compoundref="NRF24L01_8cpp" startline="699" endline="704">NRF24L01::setAutoAck</references>
        <references refid="classNRF24L01_1ae4067455572c6731211315b3900f5cbd" compoundref="NRF24L01_8cpp" startline="641" endline="654">NRF24L01::enableAckPayload</references>
        <references refid="classNRF24L01_1abd060c4df7efac781ed5812a0ee19d08" compoundref="NRF24L01_8cpp" startline="611" endline="624">NRF24L01::enableDynamicPayloads</references>
        <references refid="classNRF24L01_1ad64a887cae746be5ca43cf08445feed9" compoundref="NRF24L01_8cpp" startline="503" endline="514">NRF24L01::openWritingPipe</references>
        <references refid="classNRF24L01_1a9b458f77f6ae6c42f330710e703dd847" compoundref="NRF24L01_8cpp" startline="552" endline="574">NRF24L01::openReadingPipe</references>
        <references refid="classNRF24L01_1aaabd39829998b609c0dc317af4f141b2" compoundref="NRF24L01_8cpp" startline="220" endline="242">NRF24L01::startListening</references>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1ab6a58c0a49a7211a1bc6185a6f1f605b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_interupt</definition>
        <argsstring>()</argsstring>
        <name>init_interupt</name>
        <briefdescription>
<para>Initialize interrupts. </para>        </briefdescription>
        <detaileddescription>
<para>Trigger INT1 on rising edge and INT0 on falling edge </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="295" column="1" bodyfile="src/main.cpp" bodystart="295" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1afea150fcd685610cb9f7672fce361e53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ISR</definition>
        <argsstring>(INT0_vect)</argsstring>
        <name>ISR</name>
        <param>
          <type>INT0_vect</type>
        </param>
        <briefdescription>
<para>Interrupt routine for INT0. </para>        </briefdescription>
        <detaileddescription>
<para>RF module sends an interrupt if there is data in its buffer to read </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="313" column="1" bodyfile="src/main.cpp" bodystart="313" bodyend="339"/>
        <references refid="main_8cpp_1a4e92ed0235dfab5a966c53305989ecbf" compoundref="main_8cpp" startline="74">nrfIntFlag</references>
        <references refid="classNRF24L01_1ad98d10f3759d41e565397aba824d121b" compoundref="NRF24L01_8cpp" startline="491" endline="500">NRF24L01::whatHappened</references>
        <references refid="classNRF24L01_1ab368039cf5448f0ff5d489563d530c7b" compoundref="NRF24L01_8cpp" startline="1035" endline="1037">NRF24L01::available</references>
        <references refid="classNRF24L01_1a60ed6c6e072a1f41ca560546745ec6da" compoundref="NRF24L01_8cpp" startline="685" endline="693">NRF24L01::read</references>
        <references refid="main_8cpp_1a557ea16c17e1a3f7a39f32181dc5d531" compoundref="main_8cpp" startline="76">bufferNRF</references>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a22acfb428840c6d9aa212764589cf6c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ISR</definition>
        <argsstring>(INT1_vect)</argsstring>
        <name>ISR</name>
        <param>
          <type>INT1_vect</type>
        </param>
        <briefdescription>
<para>Interrupt routine for INT1. </para>        </briefdescription>
        <detaileddescription>
<para>Sets the flagMovement to 0 if the movment detector fires </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="345" column="1" bodyfile="src/main.cpp" bodystart="345" bodyend="349"/>
        <references refid="main_8cpp_1a439ad8ea3b3cc83e6ca8c7625bad49f9" compoundref="main_8cpp" startline="73">flagMovement</references>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a09ce999e15ad60b8a3f07d08af1946f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ISR</definition>
        <argsstring>(USART_RX_vect)</argsstring>
        <name>ISR</name>
        <param>
          <type>USART_RX_vect</type>
        </param>
        <briefdescription>
<para>Interrupt routine for USART_RX. </para>        </briefdescription>
        <detaileddescription>
<para>Reads the incoming message from the UART buffer </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="357" column="1" bodyfile="src/main.cpp" bodystart="357" bodyend="381"/>
        <references refid="classUSART_1a7e56b380e59b576bbac13e60ca9ba829" compoundref="USART_8cpp" startline="116" endline="129">USART::readString</references>
        <references refid="main_8cpp_1ac19b967928c4ef5b461808cbac40840c" compoundref="main_8cpp" startline="97">str</references>
        <references refid="USART_8h_1af679da36f24305cc55bc4e62a2375d2d" compoundref="USART_8h" startline="51">RX_BUFF</references>
        <references refid="classUSART_1a249b0d6967ead56f39448d4954835a27" compoundref="USART_8cpp" startline="107" endline="113">USART::writeString</references>
        <references refid="main_8cpp_1a8529b711d50e5de54deba7c6b1863d14" compoundref="main_8cpp" startline="72">uartRX_flag</references>
        <references refid="classUSART_1abad4151d072782e70255f999a1451199" compoundref="USART_8cpp" startline="98" endline="101">USART::USART0_Flush</references>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
<para>Main function. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>an integer 0 upon exit success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para><xrefsect id="todo_1_todo000001"><xreftitle>Todo</xreftitle><xrefdescription><para>System info </para></xrefdescription></xrefsect></para>        </inbodydescription>
        <location file="src/main.cpp" line="414" column="1" bodyfile="src/main.cpp" bodystart="414" bodyend="854"/>
        <references refid="main_8cpp_1ab6a58c0a49a7211a1bc6185a6f1f605b" compoundref="main_8cpp" startline="295" endline="306">init_interupt</references>
        <references refid="classUSART_1a5f8bbc3788153e13d94ece254f8ee2e7" compoundref="USART_8cpp" startline="48" endline="73">USART::initUART</references>
        <references refid="main_8cpp_1aa0dce6d249d81fb85b082273270ba710" compoundref="main_8cpp" startline="142" endline="147">delay_ms</references>
        <references refid="main_8cpp_1af3f2bf35046819f223de9b818029af1c" compoundref="main_8cpp" startline="203" endline="289">SetupNRF</references>
        <references refid="main_8cpp_1a4e92ed0235dfab5a966c53305989ecbf" compoundref="main_8cpp" startline="74">nrfIntFlag</references>
        <references refid="main_8cpp_1a8529b711d50e5de54deba7c6b1863d14" compoundref="main_8cpp" startline="72">uartRX_flag</references>
        <references refid="classParseStrings_1a49f5520441d291626b4d655d20a6ab19" compoundref="ParseStrings_8cpp" startline="162" endline="219">ParseStrings::Parse</references>
        <references refid="main_8cpp_1ac19b967928c4ef5b461808cbac40840c" compoundref="main_8cpp" startline="97">str</references>
        <references refid="classParseStrings_1a9fbcb70ec76da019901ac4d04d8f48d7" compoundref="ParseStrings_8cpp" startline="150" endline="153">ParseStrings::getCmdID</references>
        <references refid="classParseStrings_1a9287dd0575737da66fa0ba2f8fdd003b" compoundref="ParseStrings_8cpp" startline="157" endline="159">ParseStrings::getPropertyID</references>
        <references refid="classParseStrings_1abda18520c80670139930230a2524b964" compoundref="ParseStrings_8cpp" startline="154" endline="156">ParseStrings::getCmdProperty</references>
        <references refid="classParseStrings_1a1a177dfb6cb057b7709710362b3e10a0" compoundref="ParseStrings_8cpp" startline="61" endline="94">ParseStrings::ParseMAC</references>
        <references refid="classParseStrings_1a7b0f8fdd77be81594f0495637de5138c" compoundref="ParseStrings_8cpp" startline="135" endline="148">ParseStrings::getMAC</references>
        <references refid="main_8cpp_1ae62ba57830fc3210edf7d78311e7403e" compoundref="main_8cpp" startline="94">mem_adressTx</references>
        <references refid="main_8cpp_1abd46d3d3672467c73c53275003c33c17" compoundref="main_8cpp" startline="95">mem_adressRx</references>
        <references refid="main_8cpp_1a94f95ee5ee779c95ed60e07ae9ea5dc6" compoundref="main_8cpp" startline="88">nrfChannel</references>
        <references refid="main_8cpp_1a6024fb08e723cdd46a4b3687b7328a3c" compoundref="main_8cpp" startline="90">pwrLvl</references>
        <references refid="main_8cpp_1a02938b341e80cec9fb0c90ca7087a355" compoundref="main_8cpp" startline="91">dataRate</references>
        <references refid="main_8cpp_1ab2da2e7547f36c6397be13407d26a687" compoundref="main_8cpp" startline="92">crcLvl</references>
        <references refid="main_8cpp_1a371b432ae65ae3f6d1cc89a0f392c0cb" compoundref="main_8cpp" startline="89">nrfACK</references>
        <references refid="main_8cpp_1a61b4f384283b1a2ea53ac795896b6a53" compoundref="main_8cpp" startline="80">firstrun</references>
        <references refid="classParseStrings_1a48fbe6998c3dd4d6bd5a57644a45eb8e" compoundref="ParseStrings_8cpp" startline="96" endline="100">ParseStrings::getPropertyString</references>
        <references refid="main_8cpp_1af46bdd771d27528209de39fb63e15b46" compoundref="main_8cpp" startline="170" endline="177">CreateSensorMAC</references>
        <references refid="main_8cpp_1ad5572274b88d1bfc8a5e057e1132bf90" compoundref="main_8cpp" startline="83">sendSystemStr</references>
        <references refid="classUSART_1a249b0d6967ead56f39448d4954835a27" compoundref="USART_8cpp" startline="107" endline="113">USART::writeString</references>
        <references refid="classNRF24L01_1a6ad13189b732f237ac148c659ddf6b01" compoundref="NRF24L01_8cpp" startline="247" endline="264">NRF24L01::stopListening</references>
        <references refid="classNRF24L01_1ad64a887cae746be5ca43cf08445feed9" compoundref="NRF24L01_8cpp" startline="503" endline="514">NRF24L01::openWritingPipe</references>
        <references refid="classNRF24L01_1a9b458f77f6ae6c42f330710e703dd847" compoundref="NRF24L01_8cpp" startline="552" endline="574">NRF24L01::openReadingPipe</references>
        <references refid="main_8cpp_1a1b027732838bd645cecfd35415ecb8c6" compoundref="main_8cpp" startline="102">adressRx</references>
        <references refid="classNRF24L01_1aaabd39829998b609c0dc317af4f141b2" compoundref="NRF24L01_8cpp" startline="220" endline="242">NRF24L01::startListening</references>
        <references refid="main_8cpp_1a19dbb1ae18200033d3316c06ae09b7f7" compoundref="main_8cpp" startline="84">getSystemStr</references>
        <references refid="classParseStrings_1a6dbe145425dd08c33444e5ffd9181041" compoundref="ParseStrings_8cpp" startline="101" endline="132">ParseStrings::getPropertyIDAsMAC</references>
        <references refid="main_8cpp_1a439ad8ea3b3cc83e6ca8c7625bad49f9" compoundref="main_8cpp" startline="73">flagMovement</references>
        <references refid="main_8cpp_1ac92f70960babcaa68482b8ea681bcec8" compoundref="main_8cpp" startline="82">sendSensorStr</references>
        <references refid="classDHT22_1ac3f4e0757e14c5a8ea96cd4eb5e8d57c" compoundref="DHT22_8cpp" startline="169" endline="195">DHT22::GetSensorStringXML</references>
        <references refid="classPhotoresistor_1afa6d3901116b270855a95156f99010e4" compoundref="Photoresistor_8cpp" startline="71" endline="89">Photoresistor::GetSensorStringXML</references>
        <references refid="classDS18B20_1a64a03b4a18a9d2b3faeb7943865055e9" compoundref="DS18B20_8cpp" startline="280" endline="288">DS18B20::GetSensorStringXML</references>
        <references refid="classDS18B20_1af18146fd823d04f5472fb305e46f02b0" compoundref="DS18B20_8cpp" startline="271" endline="273">DS18B20::GetMACString</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="24"><highlight class="preprocessor">#include<sp/>&lt;avr/io.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;util/delay.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;avr/interrupt.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;inttypes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;avr/eeprom.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;avr/pgmspace.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&lt;avr/wdt.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="USART_8h" kindref="compound">IO/USART.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ParseStrings_8h" kindref="compound">IO/ParseStrings.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="NRF24L01_8h" kindref="compound">Wireless/NRF24L01.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>F_CPU<sp/>16000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="main_8cpp_1af332f65aca07c44deeda884c8f6c353c" refkind="member"><highlight class="preprocessor">#define<sp/>CE<sp/>PB1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="main_8cpp_1a8df4f3a8a2035df063402ae5f0c1d2f8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CSN<sp/>PB0<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="main_8cpp_1a70d2f38065e15ec8ca4c5144e8365815" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Sensor_DS18B20<sp/>1<sp/></highlight></codeline>
<codeline lineno="50" refid="main_8cpp_1adecd7bcd3e5fd9d8aff20435fa31780d" refkind="member"><highlight class="preprocessor">#define<sp/>Sensor_DHT22<sp/>0<sp/><sp/></highlight></codeline>
<codeline lineno="51" refid="main_8cpp_1a836c5fd677da287d2c5fc1b8f8be283e" refkind="member"><highlight class="preprocessor">#define<sp/>Sensor_Move<sp/>1<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52" refid="main_8cpp_1a1302e578dfa4674d460a42d440c505a1" refkind="member"><highlight class="preprocessor">#define<sp/>Sensor_LightVoltage<sp/>1<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53" refid="main_8cpp_1a684578846dbea988173b03a4ccf32bc7" refkind="member"><highlight class="preprocessor">#define<sp/>Sensor_LightLux<sp/>0<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54" refid="main_8cpp_1a8bf6bf97515b582db8d0e241724566a2" refkind="member"><highlight class="preprocessor">#define<sp/>Sensor_Pressure<sp/>0<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="main_8cpp_1a73f3f710edd90106325c0c427e712e60" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_MainNode<sp/>1<sp/><sp/></highlight></codeline>
<codeline lineno="57" refid="main_8cpp_1ade828ec827ef9a6dd7199e6ef25ad134" refkind="member"><highlight class="preprocessor">#define<sp/>NRF_SN<sp/>0<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58" refid="main_8cpp_1a0b139cee69f4fce411cafa9cd3380433" refkind="member"><highlight class="preprocessor">#define<sp/>NRF_SNnum<sp/>0<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>Sensor_DHT22</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="DHT22_8h" kindref="compound">Sensors/DHT22.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>Sensor_DS18B20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="DS18B20_8h" kindref="compound">Sensors/DS18B20.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>Sensor_LightVoltage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Photoresistor_8h" kindref="compound">Sensors/Photoresistor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>uint8_t<sp/>sent<sp/>=<sp/>0;<sp/><sp/><sp/><sp/>//!&lt;<sp/>Flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="main_8cpp_1a8529b711d50e5de54deba7c6b1863d14" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="main_8cpp_1a8529b711d50e5de54deba7c6b1863d14" kindref="member">uartRX_flag</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73" refid="main_8cpp_1a439ad8ea3b3cc83e6ca8c7625bad49f9" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="main_8cpp_1a439ad8ea3b3cc83e6ca8c7625bad49f9" kindref="member">flagMovement</ref><sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="74" refid="main_8cpp_1a4e92ed0235dfab5a966c53305989ecbf" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="main_8cpp_1a4e92ed0235dfab5a966c53305989ecbf" kindref="member">nrfIntFlag</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="main_8cpp_1a557ea16c17e1a3f7a39f32181dc5d531" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a557ea16c17e1a3f7a39f32181dc5d531" kindref="member">bufferNRF</ref>[128][5];<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//static<sp/>char*<sp/>system<sp/>=<sp/>&quot;&lt;SYSTEM&gt;&lt;VERSION&gt;1.0||&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="main_8cpp_1a61b4f384283b1a2ea53ac795896b6a53" refkind="member"><highlight class="normal">uint8_t<sp/>EEMEM<sp/><ref refid="main_8cpp_1a61b4f384283b1a2ea53ac795896b6a53" kindref="member">firstrun</ref>;<sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="main_8cpp_1ac92f70960babcaa68482b8ea681bcec8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1ac92f70960babcaa68482b8ea681bcec8" kindref="member">sendSensorStr</ref>[]<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/sensor/%s/|%s/|%s&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="83" refid="main_8cpp_1ad5572274b88d1bfc8a5e057e1132bf90" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1ad5572274b88d1bfc8a5e057e1132bf90" kindref="member">sendSystemStr</ref>[]<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/system/%s/|%s/|%s&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="84" refid="main_8cpp_1a19dbb1ae18200033d3316c06ae09b7f7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a19dbb1ae18200033d3316c06ae09b7f7" kindref="member">getSystemStr</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;%s|%s|%s&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="main_8cpp_1aaeeabc962622e38a59734f975d2734e9" refkind="member"><highlight class="normal">uint8_t<sp/>EEMEM<sp/><ref refid="main_8cpp_1aaeeabc962622e38a59734f975d2734e9" kindref="member">pipeEnable</ref><sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="88" refid="main_8cpp_1a94f95ee5ee779c95ed60e07ae9ea5dc6" refkind="member"><highlight class="normal">uint8_t<sp/>EEMEM<sp/><ref refid="main_8cpp_1a94f95ee5ee779c95ed60e07ae9ea5dc6" kindref="member">nrfChannel</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89" refid="main_8cpp_1a371b432ae65ae3f6d1cc89a0f392c0cb" refkind="member"><highlight class="normal">uint8_t<sp/>EEMEM<sp/><ref refid="main_8cpp_1a371b432ae65ae3f6d1cc89a0f392c0cb" kindref="member">nrfACK</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90" refid="main_8cpp_1a6024fb08e723cdd46a4b3687b7328a3c" refkind="member"><highlight class="normal">uint8_t<sp/>EEMEM<sp/><ref refid="main_8cpp_1a6024fb08e723cdd46a4b3687b7328a3c" kindref="member">pwrLvl</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91" refid="main_8cpp_1a02938b341e80cec9fb0c90ca7087a355" refkind="member"><highlight class="normal">uint8_t<sp/>EEMEM<sp/><ref refid="main_8cpp_1a02938b341e80cec9fb0c90ca7087a355" kindref="member">dataRate</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92" refid="main_8cpp_1ab2da2e7547f36c6397be13407d26a687" refkind="member"><highlight class="normal">uint8_t<sp/>EEMEM<sp/><ref refid="main_8cpp_1ab2da2e7547f36c6397be13407d26a687" kindref="member">crcLvl</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94" refid="main_8cpp_1ae62ba57830fc3210edf7d78311e7403e" refkind="member"><highlight class="normal">uint64_t<sp/>EEMEM<sp/><ref refid="main_8cpp_1ae62ba57830fc3210edf7d78311e7403e" kindref="member">mem_adressTx</ref>[25];<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95" refid="main_8cpp_1abd46d3d3672467c73c53275003c33c17" refkind="member"><highlight class="normal">uint64_t<sp/>EEMEM<sp/><ref refid="main_8cpp_1abd46d3d3672467c73c53275003c33c17" kindref="member">mem_adressRx</ref>[5];<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97" refid="main_8cpp_1ac19b967928c4ef5b461808cbac40840c" refkind="member"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1ac19b967928c4ef5b461808cbac40840c" kindref="member">str</ref>[<ref refid="USART_8h_1af679da36f24305cc55bc4e62a2375d2d" kindref="member">RX_BUFF</ref>];<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_MainNode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="main_8cpp_1a1b027732838bd645cecfd35415ecb8c6" refkind="member"><highlight class="normal">uint64_t<sp/><ref refid="main_8cpp_1a1b027732838bd645cecfd35415ecb8c6" kindref="member">adressRx</ref>[]<sp/>=<sp/>{0xA0A0A0A0A0,0xA0A0A0A0A1,0xA0A0A0A0A2,0xA0A0A0A0A3,0xA0A0A0A0A4};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="main_8cpp_1aa7192a06e3de8d14ce4345527faaf536" refkind="member"><highlight class="normal">uint64_t<sp/><ref refid="main_8cpp_1aa7192a06e3de8d14ce4345527faaf536" kindref="member">adressTx</ref>[]<sp/>=<sp/>{0xB0B0B0B0B0,0xB0B0B0B0C0,0xB0B0B0B0D0,0xB0B0B0B0E0,0xB0B0B0B0F0};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>NRF_SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">uint64_t<sp/><ref refid="main_8cpp_1a1b027732838bd645cecfd35415ecb8c6" kindref="member">adressRx</ref>[]<sp/>=<sp/>{0xB0B0B0B0B0,0xB0B0B0B0C0,0xB0B0B0B0D0,0xB0B0B0B0E0,0xB0B0B0B0F0};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal">uint64_t<sp/><ref refid="main_8cpp_1aa7192a06e3de8d14ce4345527faaf536" kindref="member">adressTx</ref>[]<sp/>=<sp/>{0xA0A0A0A0A0,0xA0A0A0A0A1,0xA0A0A0A0A2,0xA0A0A0A0A3,0xA0A0A0A0A4};</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="main_8cpp_1a4b0f6407730ca2581db1526feda70ea6" refkind="member"><highlight class="normal"><ref refid="classUSART" kindref="compound">USART</ref><sp/><ref refid="main_8cpp_1a4b0f6407730ca2581db1526feda70ea6" kindref="member">uart</ref><sp/>=<sp/><ref refid="classUSART" kindref="compound">USART</ref>(9600);<sp/></highlight></codeline>
<codeline lineno="120" refid="main_8cpp_1a4d8d5d287d7e4a27644e7c3b83bfcce2" refkind="member"><highlight class="normal"><ref refid="classNRF24L01" kindref="compound">NRF24L01</ref><sp/><ref refid="main_8cpp_1a4d8d5d287d7e4a27644e7c3b83bfcce2" kindref="member">nrf</ref><sp/>=<sp/><ref refid="classNRF24L01" kindref="compound">NRF24L01</ref>(DDRB,<sp/>PORTB,<sp/><ref refid="main_8cpp_1af332f65aca07c44deeda884c8f6c353c" kindref="member">CE</ref>,<sp/><ref refid="main_8cpp_1a8df4f3a8a2035df063402ae5f0c1d2f8" kindref="member">CSN</ref>);<sp/></highlight></codeline>
<codeline lineno="121" refid="main_8cpp_1aebe9772f1bc160f5bd6e36ec6d174343" refkind="member"><highlight class="normal"><ref refid="classParseStrings" kindref="compound">ParseStrings</ref><sp/><ref refid="main_8cpp_1aebe9772f1bc160f5bd6e36ec6d174343" kindref="member">ps</ref><sp/>=<sp/><ref refid="classParseStrings" kindref="compound">ParseStrings</ref>();<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>Sensor_DS18B20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="main_8cpp_1af23d3ee921f59b64f27b4581ba32eba7" refkind="member"><highlight class="normal"><ref refid="classDS18B20" kindref="compound">DS18B20</ref><sp/><ref refid="main_8cpp_1af23d3ee921f59b64f27b4581ba32eba7" kindref="member">ds</ref><sp/>=<sp/><ref refid="classDS18B20" kindref="compound">DS18B20</ref>(PORTD,DDRD,PIND,<sp/>PD6);<sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>Sensor_DHT22</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><ref refid="classDHT22" kindref="compound">DHT22</ref><sp/>dht22<sp/>=<sp/><ref refid="classDHT22" kindref="compound">DHT22</ref>(PORTD,DDRD,PIND,PD7);<sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>Sensor_LightVoltage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="main_8cpp_1a56be6db06a776b7b88ce899534d45d67" refkind="member"><highlight class="normal"><ref refid="classPhotoresistor" kindref="compound">Photoresistor</ref><sp/><ref refid="main_8cpp_1a56be6db06a776b7b88ce899534d45d67" kindref="member">pr</ref><sp/>=<sp/><ref refid="classPhotoresistor" kindref="compound">Photoresistor</ref>(0x00);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"></codeline>
<codeline lineno="142" refid="main_8cpp_1aa0dce6d249d81fb85b082273270ba710" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1aa0dce6d249d81fb85b082273270ba710" kindref="member">delay_ms</ref>(uint16_t<sp/>ms){</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint16_t<sp/>t=0;<sp/>t&lt;=ms;<sp/>t++){</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_delay_ms(1);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"></codeline>
<codeline lineno="155" refid="main_8cpp_1a0cb304e3b4343bd171a793e59ebd5606" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a0cb304e3b4343bd171a793e59ebd5606" kindref="member">GetNodeMAC</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>newMAC,<sp/>uint8_t*<sp/>nrfMAC){</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(newMAC,</highlight><highlight class="stringliteral">&quot;%02X:%02X:%02X:%02X:%02X&quot;</highlight><highlight class="normal">,nrfMAC[0],nrfMAC[1],nrfMAC[2],nrfMAC[3],nrfMAC[4]);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170" refid="main_8cpp_1af46bdd771d27528209de39fb63e15b46" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1af46bdd771d27528209de39fb63e15b46" kindref="member">CreateSensorMAC</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>newMAC,<sp/>uint8_t*<sp/>nrfMAC,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>add){</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(newMAC,</highlight><highlight class="stringliteral">&quot;%02X:%02X:%02X:%02X:%02X%s&quot;</highlight><highlight class="normal">,nrfMAC[0],nrfMAC[1],nrfMAC[2],nrfMAC[3],nrfMAC[4],add);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185" refid="main_8cpp_1a87e8f767c8e0f0b39062d3b566a97829" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1af46bdd771d27528209de39fb63e15b46" kindref="member">CreateSensorMAC</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>newMAC,<sp/>uint64_t<sp/>nrfMAC,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>add){</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(newMAC,</highlight><highlight class="stringliteral">&quot;%02X:%02X:%02X:%02X:%02X%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint8_t)((nrfMAC<sp/>&amp;<sp/>0xff00000000)&gt;&gt;32),</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint8_t)((nrfMAC<sp/>&amp;<sp/>0x00ff000000)&gt;&gt;24),</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint8_t)((nrfMAC<sp/>&amp;<sp/>0x0000ff0000)&gt;&gt;16),</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint8_t)((nrfMAC<sp/>&amp;<sp/>0x000000ff00)&gt;&gt;8),</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint8_t)(nrfMAC<sp/>&amp;<sp/>0x00000000ff),add);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="main_8cpp_1af3f2bf35046819f223de9b818029af1c" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1af3f2bf35046819f223de9b818029af1c" kindref="member">SetupNRF</ref>(){</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>nrfChn<sp/>=<sp/>0x0A;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>nrfAutoACK<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>nrfPipesEnable<sp/>=<sp/>0b00111111;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>powerLvl<sp/>=<sp/><ref refid="NRF24L01_8h_1a1e4cd0bea93e6b43422855fb0120aacea7d8d09f4a047b7c22655e56c98ca010c" kindref="member">RF24_PA_LOW</ref>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>dataRt<sp/>=<sp/><ref refid="NRF24L01_8h_1a82745de4aa1251b7561564b3ed1d6522afd01f3fd55247a67c0bcfd459fe17fdf" kindref="member">RF24_1MBPS</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>crcLevel<sp/>=<sp/><ref refid="NRF24L01_8h_1adbe00719f3f835c82bd007081d040a7ea6eeb0379e23be63559106d96ada47a56" kindref="member">RF24_CRC_16</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>fr<sp/>=eeprom_read_byte(&amp;<ref refid="main_8cpp_1a61b4f384283b1a2ea53ac795896b6a53" kindref="member">firstrun</ref>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fr<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>empty<sp/>eeprom<sp/>after<sp/>chip<sp/>erase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nRF<sp/>config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eeprom_update_block(<ref refid="main_8cpp_1aa7192a06e3de8d14ce4345527faaf536" kindref="member">adressTx</ref>,<ref refid="main_8cpp_1ae62ba57830fc3210edf7d78311e7403e" kindref="member">mem_adressTx</ref>,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="main_8cpp_1ae62ba57830fc3210edf7d78311e7403e" kindref="member">mem_adressTx</ref>));</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eeprom_update_block(<ref refid="main_8cpp_1a1b027732838bd645cecfd35415ecb8c6" kindref="member">adressRx</ref>,<ref refid="main_8cpp_1abd46d3d3672467c73c53275003c33c17" kindref="member">mem_adressRx</ref>,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="main_8cpp_1abd46d3d3672467c73c53275003c33c17" kindref="member">mem_adressRx</ref>));</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eeprom_write_byte(&amp;<ref refid="main_8cpp_1a61b4f384283b1a2ea53ac795896b6a53" kindref="member">firstrun</ref>,1);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eeprom_write_byte(&amp;<ref refid="main_8cpp_1a371b432ae65ae3f6d1cc89a0f392c0cb" kindref="member">nrfACK</ref>,nrfAutoACK);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eeprom_write_byte(&amp;<ref refid="main_8cpp_1a94f95ee5ee779c95ed60e07ae9ea5dc6" kindref="member">nrfChannel</ref>,nrfChn);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eeprom_write_byte(&amp;<ref refid="main_8cpp_1aaeeabc962622e38a59734f975d2734e9" kindref="member">pipeEnable</ref>,nrfPipesEnable);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eeprom_write_byte(&amp;<ref refid="main_8cpp_1a6024fb08e723cdd46a4b3687b7328a3c" kindref="member">pwrLvl</ref>,powerLvl);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eeprom_write_byte(&amp;<ref refid="main_8cpp_1a02938b341e80cec9fb0c90ca7087a355" kindref="member">dataRate</ref>,dataRt);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eeprom_write_byte(&amp;<ref refid="main_8cpp_1ab2da2e7547f36c6397be13407d26a687" kindref="member">crcLvl</ref>,crcLevel);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fr==1){</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>after<sp/>restart</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>nRF<sp/>config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eeprom_read_block(<ref refid="main_8cpp_1aa7192a06e3de8d14ce4345527faaf536" kindref="member">adressTx</ref>,<ref refid="main_8cpp_1ae62ba57830fc3210edf7d78311e7403e" kindref="member">mem_adressTx</ref>,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="main_8cpp_1ae62ba57830fc3210edf7d78311e7403e" kindref="member">mem_adressTx</ref>));</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eeprom_read_block(<ref refid="main_8cpp_1a1b027732838bd645cecfd35415ecb8c6" kindref="member">adressRx</ref>,<ref refid="main_8cpp_1abd46d3d3672467c73c53275003c33c17" kindref="member">mem_adressRx</ref>,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="main_8cpp_1abd46d3d3672467c73c53275003c33c17" kindref="member">mem_adressRx</ref>));</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrfChn<sp/>=<sp/>eeprom_read_byte(&amp;<ref refid="main_8cpp_1a94f95ee5ee779c95ed60e07ae9ea5dc6" kindref="member">nrfChannel</ref>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrfAutoACK<sp/>=<sp/>eeprom_read_byte(&amp;<ref refid="main_8cpp_1a371b432ae65ae3f6d1cc89a0f392c0cb" kindref="member">nrfACK</ref>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrfPipesEnable<sp/>=<sp/>eeprom_read_byte(&amp;<ref refid="main_8cpp_1aaeeabc962622e38a59734f975d2734e9" kindref="member">pipeEnable</ref>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>powerLvl<sp/>=<sp/>eeprom_read_byte(&amp;<ref refid="main_8cpp_1a6024fb08e723cdd46a4b3687b7328a3c" kindref="member">pwrLvl</ref>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataRt<sp/>=<sp/>eeprom_read_byte(&amp;<ref refid="main_8cpp_1a02938b341e80cec9fb0c90ca7087a355" kindref="member">dataRate</ref>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crcLevel<sp/>=<sp/>eeprom_read_byte(&amp;<ref refid="main_8cpp_1ab2da2e7547f36c6397be13407d26a687" kindref="member">crcLvl</ref>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf.<ref refid="classNRF24L01_1a2973773d1a158e1cfbf52198f248c548" kindref="member">Init</ref>();</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf.<ref refid="classNRF24L01_1aa8eaf9d5ed604f60a00cd79fed9edad7" kindref="member">setChannel</ref>(nrfChn);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf.<ref refid="classNRF24L01_1a6081dd6dd9cdffbc1c7534ee1824201d" kindref="member">setCRCLength</ref>(crcLevel);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf.<ref refid="classNRF24L01_1a7319961d6048e32546ad5df934bd42d8" kindref="member">setPALevel</ref>(powerLvl);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf.<ref refid="classNRF24L01_1a9db0803c6d87e6ada7febea2240a7b1c" kindref="member">setDataRate</ref>(dataRt);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nrfAutoACK==1){</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf.<ref refid="classNRF24L01_1a33b1c7dd1cad95dae57ef87bf3dce5c8" kindref="member">setAutoAck</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf.<ref refid="classNRF24L01_1a33b1c7dd1cad95dae57ef87bf3dce5c8" kindref="member">setAutoAck</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf.<ref refid="classNRF24L01_1ae4067455572c6731211315b3900f5cbd" kindref="member">enableAckPayload</ref>();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf.<ref refid="classNRF24L01_1abd060c4df7efac781ed5812a0ee19d08" kindref="member">enableDynamicPayloads</ref>();</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf.<ref refid="classNRF24L01_1ad64a887cae746be5ca43cf08445feed9" kindref="member">openWritingPipe</ref>(<ref refid="main_8cpp_1aa7192a06e3de8d14ce4345527faaf536" kindref="member">adressTx</ref>[0]);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf.<ref refid="classNRF24L01_1a9b458f77f6ae6c42f330710e703dd847" kindref="member">openReadingPipe</ref>(1,<ref refid="main_8cpp_1a1b027732838bd645cecfd35415ecb8c6" kindref="member">adressRx</ref>[0]);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf.<ref refid="classNRF24L01_1aaabd39829998b609c0dc317af4f141b2" kindref="member">startListening</ref>();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295" refid="main_8cpp_1ab6a58c0a49a7211a1bc6185a6f1f605b" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1ab6a58c0a49a7211a1bc6185a6f1f605b" kindref="member">init_interupt</ref>(){</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>EICRA<sp/>=<sp/><sp/>(1&lt;&lt;ISC10)<sp/>|<sp/>(1&lt;&lt;ISC11)<sp/>|<sp/>(1&lt;&lt;ISC01);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>INT0<sp/>and<sp/><sp/>INT1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>EIMSK<sp/>=<sp/>1&lt;&lt;INT1<sp/>|<sp/>1&lt;&lt;INT0;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>it<sp/>up.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>sei();</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"></codeline>
<codeline lineno="313" refid="main_8cpp_1afea150fcd685610cb9f7672fce361e53" refkind="member"><highlight class="normal"><ref refid="main_8cpp_1afea150fcd685610cb9f7672fce361e53" kindref="member">ISR</ref>(INT0_vect){</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>PORTD<sp/>^=<sp/>(1&lt;&lt;PD4);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nrf<sp/>receive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//uart.writeString(&quot;INT0\r\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a4e92ed0235dfab5a966c53305989ecbf" kindref="member">nrfIntFlag</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tx,fail,rx;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>nrf.<ref refid="classNRF24L01_1ad98d10f3759d41e565397aba824d121b" kindref="member">whatHappened</ref>(tx,fail,rx);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>pipeNo;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>received[128];</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rx<sp/>||<sp/>nrf.<ref refid="classNRF24L01_1ab368039cf5448f0ff5d489563d530c7b" kindref="member">available</ref>(&amp;pipeNo)<sp/>){</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf.<ref refid="classNRF24L01_1a60ed6c6e072a1f41ca560546745ec6da" kindref="member">read</ref>(&amp;received,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(received));</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint8_t<sp/>i=0;i&lt;</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(received);i++){</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a557ea16c17e1a3f7a39f32181dc5d531" kindref="member">bufferNRF</ref>[i][pipeNo]<sp/>=<sp/>received[i];</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="341"></codeline>
<codeline lineno="345" refid="main_8cpp_1a22acfb428840c6d9aa212764589cf6c6" refkind="member"><highlight class="normal"><ref refid="main_8cpp_1afea150fcd685610cb9f7672fce361e53" kindref="member">ISR</ref>(INT1_vect){</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>movement<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a439ad8ea3b3cc83e6ca8c7625bad49f9" kindref="member">flagMovement</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"></codeline>
<codeline lineno="357" refid="main_8cpp_1a09ce999e15ad60b8a3f07d08af1946f9" refkind="member"><highlight class="normal"><ref refid="main_8cpp_1afea150fcd685610cb9f7672fce361e53" kindref="member">ISR</ref>(USART_RX_vect){</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="comment">//<sp/>fifo_put</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>PORTD<sp/>^=<sp/>(1&lt;&lt;PD4);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>char*<sp/>s<sp/>=<sp/>uart.readString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>uart.<ref refid="classUSART_1a7e56b380e59b576bbac13e60ca9ba829" kindref="member">readString</ref>(<ref refid="main_8cpp_1ac19b967928c4ef5b461808cbac40840c" kindref="member">str</ref>,<ref refid="USART_8h_1af679da36f24305cc55bc4e62a2375d2d" kindref="member">RX_BUFF</ref>);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>s[50];</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal">sprintf(s,</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal">sprintf(s,</highlight><highlight class="stringliteral">&quot;//input/%s/&quot;</highlight><highlight class="normal">,<ref refid="main_8cpp_1ac19b967928c4ef5b461808cbac40840c" kindref="member">str</ref>);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="comment">//sprintf(str,&quot;%s&quot;,&quot;&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal">uart.<ref refid="classUSART_1a249b0d6967ead56f39448d4954835a27" kindref="member">writeString</ref>(s);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><ref refid="main_8cpp_1a8529b711d50e5de54deba7c6b1863d14" kindref="member">uartRX_flag</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal">uart.<ref refid="classUSART_1abad4151d072782e70255f999a1451199" kindref="member">USART0_Flush</ref>();</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="384"><highlight class="comment">ISR(USART_UDRE_vect){</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/><sp/><sp/><sp/>//if<sp/>index<sp/>is<sp/>not<sp/>at<sp/>start<sp/>of<sp/>buffer</highlight></codeline>
<codeline lineno="386"><highlight class="comment"></highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//disable<sp/>transmission<sp/>and<sp/>UDR0<sp/>empty<sp/>interrupt</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/><sp/>//<sp/><sp/>TX_STOP();</highlight></codeline>
<codeline lineno="389"><highlight class="comment"></highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/><sp/><sp/><sp/>UCSR0B<sp/>&amp;=<sp/>~((1&lt;&lt;TXEN0)|(1&lt;&lt;UDRIE0));</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//enable<sp/>reception<sp/>and<sp/>RC<sp/>complete<sp/>interrupt</highlight></codeline>
<codeline lineno="392"><highlight class="comment"></highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RX_START();</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RX_INTEN();</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/><sp/>UCSR0B<sp/>|=<sp/>(1&lt;&lt;RXEN0)|(1&lt;&lt;RXCIE0);</highlight></codeline>
<codeline lineno="396"><highlight class="comment"></highlight></codeline>
<codeline lineno="397"><highlight class="comment">}</highlight></codeline>
<codeline lineno="398"><highlight class="comment"></highlight></codeline>
<codeline lineno="399"><highlight class="comment">ISR(USART_UDRE_vect){</highlight></codeline>
<codeline lineno="400"><highlight class="comment">//<sp/>fifo_get<sp/>-&gt;<sp/>writeString()</highlight></codeline>
<codeline lineno="401"><highlight class="comment"></highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/><sp/><sp/><sp/>uart.writeString(str);</highlight></codeline>
<codeline lineno="403"><highlight class="comment"></highlight></codeline>
<codeline lineno="404"><highlight class="comment">}</highlight></codeline>
<codeline lineno="405"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>(){</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Define<sp/>pull-ups<sp/>and<sp/>set<sp/>output<sp/>high</highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>Define<sp/>directions<sp/>for<sp/>port<sp/>pins</highlight></codeline>
<codeline lineno="418"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>DDRD<sp/>|=<sp/>(1&lt;&lt;DDD4);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>PORTD<sp/>|=<sp/>(1&lt;&lt;PD4|<sp/>(1&lt;&lt;PD3));</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1ab6a58c0a49a7211a1bc6185a6f1f605b" kindref="member">init_interupt</ref>();</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>uart.<ref refid="classUSART_1a5f8bbc3788153e13d94ece254f8ee2e7" kindref="member">initUART</ref>();</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1aa0dce6d249d81fb85b082273270ba710" kindref="member">delay_ms</ref>(500);<sp/></highlight><highlight class="comment">/*<sp/>Delay<sp/>500ms<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>PORTD<sp/>^=<sp/>(1&lt;&lt;PD4);<sp/></highlight><highlight class="comment">/*<sp/>Toggle<sp/>PD4*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[350];</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>char<sp/>system[500];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sprintf(buffer,&quot;\r\n###########<sp/>START<sp/>#############\r\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//uart.writeString(buffer);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//snprintf(buffer,1,<sp/>&quot;<sp/>&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1af3f2bf35046819f223de9b818029af1c" kindref="member">SetupNRF</ref>();</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1aa0dce6d249d81fb85b082273270ba710" kindref="member">delay_ms</ref>(500);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><sp/>stdMAC<sp/>=<sp/>{0xa0a0a0a0a0};</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>propString[36];</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1){</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//uint8_t<sp/>macAddr[5];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//eeprom_read_block<sp/>(macAddr,<sp/>nRFPipe0,<sp/>sizeof(nRFPipe0));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sprintf(buffer,&quot;&lt;sensor<sp/>mac=%02X:%02X:%02X:%02X:%02X&gt;&quot;,macAddr[0],macAddr[1],macAddr[2],macAddr[3],macAddr[4]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PORTD<sp/>^=<sp/>(1&lt;&lt;PD4);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(buffer,</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="main_8cpp_1a4e92ed0235dfab5a966c53305989ecbf" kindref="member">nrfIntFlag</ref>){</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a4e92ed0235dfab5a966c53305989ecbf" kindref="member">nrfIntFlag</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="main_8cpp_1a8529b711d50e5de54deba7c6b1863d14" kindref="member">uartRX_flag</ref>){</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ps.<ref refid="classParseStrings_1a49f5520441d291626b4d655d20a6ab19" kindref="member">Parse</ref>(<ref refid="main_8cpp_1ac19b967928c4ef5b461808cbac40840c" kindref="member">str</ref>);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ps.<ref refid="classParseStrings_1a9fbcb70ec76da019901ac4d04d8f48d7" kindref="member">getCmdID</ref>()==0x10){<sp/></highlight><highlight class="comment">//<sp/>configure<sp/>nRF24L01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>pidString[36];</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ps.<ref refid="classParseStrings_1a9287dd0575737da66fa0ba2f8fdd003b" kindref="member">getPropertyID</ref>(pidString);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>PID<sp/>=<sp/>(uint8_t)strtoul(pidString,NULL,16);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ps.<ref refid="classParseStrings_1abda18520c80670139930230a2524b964" kindref="member">getCmdProperty</ref>()==0){<sp/></highlight><highlight class="comment">//<sp/>set<sp/>MAC<sp/>address<sp/>for<sp/>pipe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ps.<ref refid="classParseStrings_1a1a177dfb6cb057b7709710362b3e10a0" kindref="member">ParseMAC</ref>();</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>addr<sp/>=<sp/>ps.<ref refid="classParseStrings_1a7b0f8fdd77be81594f0495637de5138c" kindref="member">getMAC</ref>();</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>sprintf(macadd,&quot;mac:<sp/>%02X:%02X:%02X:%02X:%02X\r\n&quot;,addr[0],addr[1],addr[2],addr[3],addr[4]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>uart.writeString(macadd);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(PID==0){<sp/></highlight><highlight class="comment">//<sp/>pipe<sp/>0<sp/>and<sp/>T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eeprom_write_block(&amp;addr,&amp;<ref refid="main_8cpp_1ae62ba57830fc3210edf7d78311e7403e" kindref="member">mem_adressTx</ref>[0],</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="main_8cpp_1ae62ba57830fc3210edf7d78311e7403e" kindref="member">mem_adressTx</ref>[0]));</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>nrf.SetAddressPipe0(addr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>nrf.SetAddressPipeT(addr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//CpyMAC(addr,a0,5);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//CpyMAC(addr,aT,5);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>sb[50];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(sb,&quot;<sp/>&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(sb,&quot;MAC<sp/>a0:<sp/>%02X:%02X:%02X:%02X:%02X\r\n&quot;,a0[0],a0[1],a0[2],a0[3],a0[4]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(buffer,sb);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//a0<sp/>=<sp/>ps.getMAC();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(PID==1){<sp/></highlight><highlight class="comment">//<sp/>pipe<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eeprom_write_block(&amp;addr,&amp;<ref refid="main_8cpp_1abd46d3d3672467c73c53275003c33c17" kindref="member">mem_adressRx</ref>[0],</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="main_8cpp_1abd46d3d3672467c73c53275003c33c17" kindref="member">mem_adressRx</ref>[0]));</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>strcat(buffer,&quot;wrote<sp/>block\r\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>nrf.SetAddressPipe1(addr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//CpyMAC(addr,a1,5);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(PID==2){<sp/></highlight><highlight class="comment">//<sp/>pipe<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eeprom_write_block(&amp;addr,&amp;<ref refid="main_8cpp_1abd46d3d3672467c73c53275003c33c17" kindref="member">mem_adressRx</ref>[1],</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="main_8cpp_1abd46d3d3672467c73c53275003c33c17" kindref="member">mem_adressRx</ref>[1]));</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>nrf.SetAddressPipe2(addr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>CpyMAC(addr,a2,5);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(PID==3){<sp/></highlight><highlight class="comment">//<sp/>pipe<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eeprom_write_block(&amp;addr,&amp;<ref refid="main_8cpp_1abd46d3d3672467c73c53275003c33c17" kindref="member">mem_adressRx</ref>[2],</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="main_8cpp_1abd46d3d3672467c73c53275003c33c17" kindref="member">mem_adressRx</ref>[2]));</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>nrf.SetAddressPipe3(addr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//CpyMAC(addr,a3,5);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(PID==4){<sp/></highlight><highlight class="comment">//<sp/>pipe<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eeprom_write_block(&amp;addr,&amp;<ref refid="main_8cpp_1abd46d3d3672467c73c53275003c33c17" kindref="member">mem_adressRx</ref>[3],</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="main_8cpp_1abd46d3d3672467c73c53275003c33c17" kindref="member">mem_adressRx</ref>[3]));</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>nrf.SetAddressPipe4(addr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>CpyMAC(addr,a4,5);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(PID==5){<sp/></highlight><highlight class="comment">//<sp/>pipe<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eeprom_write_block(&amp;addr,&amp;<ref refid="main_8cpp_1abd46d3d3672467c73c53275003c33c17" kindref="member">mem_adressRx</ref>[4],</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="main_8cpp_1abd46d3d3672467c73c53275003c33c17" kindref="member">mem_adressRx</ref>[4]));</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>nrf.SetAddressPipe5(addr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//CpyMAC(addr,a5,5);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>ps.PrintMAC(buffer);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ps.<ref refid="classParseStrings_1abda18520c80670139930230a2524b964" kindref="member">getCmdProperty</ref>()==1){<sp/></highlight><highlight class="comment">//<sp/>set<sp/>Channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eeprom_update_byte(&amp;<ref refid="main_8cpp_1a94f95ee5ee779c95ed60e07ae9ea5dc6" kindref="member">nrfChannel</ref>,PID);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ps.<ref refid="classParseStrings_1abda18520c80670139930230a2524b964" kindref="member">getCmdProperty</ref>()==2){<sp/></highlight><highlight class="comment">//<sp/>PowerLevel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eeprom_update_byte(&amp;<ref refid="main_8cpp_1a6024fb08e723cdd46a4b3687b7328a3c" kindref="member">pwrLvl</ref>,PID);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ps.<ref refid="classParseStrings_1abda18520c80670139930230a2524b964" kindref="member">getCmdProperty</ref>()==3){<sp/></highlight><highlight class="comment">//<sp/>Data<sp/>rate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eeprom_update_byte(&amp;<ref refid="main_8cpp_1a02938b341e80cec9fb0c90ca7087a355" kindref="member">dataRate</ref>,PID);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ps.<ref refid="classParseStrings_1abda18520c80670139930230a2524b964" kindref="member">getCmdProperty</ref>()==4){<sp/></highlight><highlight class="comment">//<sp/>CRC<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eeprom_update_byte(&amp;<ref refid="main_8cpp_1ab2da2e7547f36c6397be13407d26a687" kindref="member">crcLvl</ref>,PID);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ps.<ref refid="classParseStrings_1abda18520c80670139930230a2524b964" kindref="member">getCmdProperty</ref>()==5){<sp/></highlight><highlight class="comment">//<sp/>Auto<sp/>ACK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eeprom_update_byte(&amp;<ref refid="main_8cpp_1a371b432ae65ae3f6d1cc89a0f392c0cb" kindref="member">nrfACK</ref>,PID);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ps.<ref refid="classParseStrings_1abda18520c80670139930230a2524b964" kindref="member">getCmdProperty</ref>()==6){<sp/></highlight><highlight class="comment">//<sp/>Reset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eeprom_write_byte(&amp;<ref refid="main_8cpp_1a61b4f384283b1a2ea53ac795896b6a53" kindref="member">firstrun</ref>,0);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ps.<ref refid="classParseStrings_1abda18520c80670139930230a2524b964" kindref="member">getCmdProperty</ref>()==7){<sp/></highlight><highlight class="comment">//<sp/>System<sp/>Info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>char<sp/>buf[500];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sprintf(buf,&quot;<sp/>&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>uart.USART0_Flush();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>uart.writeString(&quot;Getting<sp/>Infos...&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//nrf.PrintInfo(buf);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>sprintf(buf,&quot;%s|%s&quot;,system,buf);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//uart.writeString(system);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>delay_ms(100);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>uart.writeString(system);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>uart.writeString(&quot;\r\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>delay_ms(500);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>uart.writeString(buf);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ps.<ref refid="classParseStrings_1a9fbcb70ec76da019901ac4d04d8f48d7" kindref="member">getCmdID</ref>()==0x20){</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>System<sp/>Info</highlight></codeline>
<codeline lineno="599"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="600"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>infoString[80];</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>nodeMac[16];</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>valBuffer[35];</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ps.<ref refid="classParseStrings_1a48fbe6998c3dd4d6bd5a57644a45eb8e" kindref="member">getPropertyString</ref>(propString);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ps.<ref refid="classParseStrings_1abda18520c80670139930230a2524b964" kindref="member">getCmdProperty</ref>()==0x00){</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>available<sp/>node<sp/>sensors</highlight></codeline>
<codeline lineno="612"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="613"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eeprom_read_block<sp/>(&amp;stdMAC,<sp/>&amp;<ref refid="main_8cpp_1abd46d3d3672467c73c53275003c33c17" kindref="member">mem_adressRx</ref>[0],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="main_8cpp_1abd46d3d3672467c73c53275003c33c17" kindref="member">mem_adressRx</ref>[0]));</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1af46bdd771d27528209de39fb63e15b46" kindref="member">CreateSensorMAC</ref>(nodeMac,stdMAC,(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(valBuffer,</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>Sensor_Move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(valBuffer,</highlight><highlight class="stringliteral">&quot;0x31|&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>Sensor_DHT22</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(valBuffer,</highlight><highlight class="stringliteral">&quot;0x32|&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>Sensor_LightVoltage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(valBuffer,</highlight><highlight class="stringliteral">&quot;0x33|&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>Sensor_LightLux</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(valBuffer,</highlight><highlight class="stringliteral">&quot;0x34|&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>Sensor_DS18B20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(valBuffer,</highlight><highlight class="stringliteral">&quot;0x35|&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>Sensor_Pressure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(valBuffer,</highlight><highlight class="stringliteral">&quot;0x36|&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(infoString,<ref refid="main_8cpp_1ad5572274b88d1bfc8a5e057e1132bf90" kindref="member">sendSystemStr</ref>,propString,nodeMac,valBuffer);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart.<ref refid="classUSART_1a249b0d6967ead56f39448d4954835a27" kindref="member">writeString</ref>(infoString);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>NRF_MainNode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ps.<ref refid="classParseStrings_1abda18520c80670139930230a2524b964" kindref="member">getCmdProperty</ref>()==0x01<sp/><sp/>){</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>available<sp/>sensors<sp/>on<sp/>node<sp/>n</highlight></codeline>
<codeline lineno="645"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="646"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>cp<sp/>=<sp/>ps.<ref refid="classParseStrings_1abda18520c80670139930230a2524b964" kindref="member">getCmdProperty</ref>()-1;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>writeto<sp/>=<sp/>{0x00};</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eeprom_read_block<sp/>(&amp;writeto,<sp/>&amp;<ref refid="main_8cpp_1ae62ba57830fc3210edf7d78311e7403e" kindref="member">mem_adressTx</ref>[cp],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="main_8cpp_1ae62ba57830fc3210edf7d78311e7403e" kindref="member">mem_adressTx</ref>[cp]));</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf.<ref refid="classNRF24L01_1a6ad13189b732f237ac148c659ddf6b01" kindref="member">stopListening</ref>();</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf.<ref refid="classNRF24L01_1ad64a887cae746be5ca43cf08445feed9" kindref="member">openWritingPipe</ref>(writeto);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf.<ref refid="classNRF24L01_1a9b458f77f6ae6c42f330710e703dd847" kindref="member">openReadingPipe</ref>(1,<ref refid="main_8cpp_1a1b027732838bd645cecfd35415ecb8c6" kindref="member">adressRx</ref>[0]);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrf.<ref refid="classNRF24L01_1aaabd39829998b609c0dc317af4f141b2" kindref="member">startListening</ref>();</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1af46bdd771d27528209de39fb63e15b46" kindref="member">CreateSensorMAC</ref>(nodeMac,writeto,(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(valBuffer,</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;Sensors&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(infoString,<ref refid="main_8cpp_1a19dbb1ae18200033d3316c06ae09b7f7" kindref="member">getSystemStr</ref>,(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;20&quot;</highlight><highlight class="normal">,nodeMac,valBuffer);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>node<sp/>n<sp/>sensors<sp/>via<sp/>nRF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>nrf.write(infoString,sizeof(infoString));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart.<ref refid="classUSART_1a249b0d6967ead56f39448d4954835a27" kindref="member">writeString</ref>(infoString);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ps.<ref refid="classParseStrings_1a9fbcb70ec76da019901ac4d04d8f48d7" kindref="member">getCmdID</ref>()==0x30){<sp/></highlight><highlight class="comment">//<sp/>get<sp/>Sensor<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ps.<ref refid="classParseStrings_1a48fbe6998c3dd4d6bd5a57644a45eb8e" kindref="member">getPropertyString</ref>(propString);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eeprom_read_block<sp/>(&amp;stdMAC,<sp/>&amp;<ref refid="main_8cpp_1abd46d3d3672467c73c53275003c33c17" kindref="member">mem_adressRx</ref>[0],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="main_8cpp_1abd46d3d3672467c73c53275003c33c17" kindref="member">mem_adressRx</ref>[0]));</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>sensorMAC[8];</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ps.<ref refid="classParseStrings_1a6dbe145425dd08c33444e5ffd9181041" kindref="member">getPropertyIDAsMAC</ref>(sensorMAC);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ps.<ref refid="classParseStrings_1abda18520c80670139930230a2524b964" kindref="member">getCmdProperty</ref>()==0x00){</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>Sensor_Move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ps.<ref refid="classParseStrings_1abda18520c80670139930230a2524b964" kindref="member">getCmdProperty</ref>()==0x01){</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="695"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Movement<sp/>detector</highlight></codeline>
<codeline lineno="696"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>mvbuffer[50];</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>newMac[25];</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1af46bdd771d27528209de39fb63e15b46" kindref="member">CreateSensorMAC</ref>(newMac,stdMAC,(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;:00:01:00|&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="main_8cpp_1a439ad8ea3b3cc83e6ca8c7625bad49f9" kindref="member">flagMovement</ref>){</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>movement<sp/>detected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(mvbuffer,<ref refid="main_8cpp_1ac92f70960babcaa68482b8ea681bcec8" kindref="member">sendSensorStr</ref>,propString,newMac,</highlight><highlight class="stringliteral">&quot;1|&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a439ad8ea3b3cc83e6ca8c7625bad49f9" kindref="member">flagMovement</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>movement<sp/>detected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(mvbuffer,<ref refid="main_8cpp_1ac92f70960babcaa68482b8ea681bcec8" kindref="member">sendSensorStr</ref>,propString,newMac,</highlight><highlight class="stringliteral">&quot;0|&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart.<ref refid="classUSART_1a249b0d6967ead56f39448d4954835a27" kindref="member">writeString</ref>(mvbuffer);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>Sensor_DHT22</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ps.<ref refid="classParseStrings_1abda18520c80670139930230a2524b964" kindref="member">getCmdProperty</ref>()==0x02){</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="723"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>DHT22</highlight></codeline>
<codeline lineno="724"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>dhtBuffer[50];</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>dhtMac[25];</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>valBuffer[18];</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1af46bdd771d27528209de39fb63e15b46" kindref="member">CreateSensorMAC</ref>(dhtMac,stdMACpipe0,(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;:00:02:00|&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dht22.<ref refid="classDHT22_1ac3f4e0757e14c5a8ea96cd4eb5e8d57c" kindref="member">GetSensorStringXML</ref>(valBuffer);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(dhtBuffer,<ref refid="main_8cpp_1ac92f70960babcaa68482b8ea681bcec8" kindref="member">sendSensorStr</ref>,propString,dhtMac,valBuffer);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart.<ref refid="classUSART_1a249b0d6967ead56f39448d4954835a27" kindref="member">writeString</ref>(dhtBuffer);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>Sensor_LightVoltage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ps.<ref refid="classParseStrings_1abda18520c80670139930230a2524b964" kindref="member">getCmdProperty</ref>()==0x03){</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="747"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Lightsense<sp/>analog</highlight></codeline>
<codeline lineno="748"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="749"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>prbuffer[80];</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>lightBuffer[15];</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pr.<ref refid="classPhotoresistor_1afa6d3901116b270855a95156f99010e4" kindref="member">GetSensorStringXML</ref>(lightBuffer);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>lightMac[25];</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1af46bdd771d27528209de39fb63e15b46" kindref="member">CreateSensorMAC</ref>(lightMac,stdMAC,(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;:00:03:00|&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(prbuffer,<ref refid="main_8cpp_1ac92f70960babcaa68482b8ea681bcec8" kindref="member">sendSensorStr</ref>,propString,lightMac,lightBuffer);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart.<ref refid="classUSART_1a249b0d6967ead56f39448d4954835a27" kindref="member">writeString</ref>(prbuffer);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>Sensor_LightLux</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ps.<ref refid="classParseStrings_1abda18520c80670139930230a2524b964" kindref="member">getCmdProperty</ref>()==0x04){</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>sensorbuffer[80];</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>lightBuffer[15];</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>lightMac[25];</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>sensorvalue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pr.GetSensorStringXML(lightBuffer);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1af46bdd771d27528209de39fb63e15b46" kindref="member">CreateSensorMAC</ref>(lightMac,stdMACpipe0,(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;:00:04:00|&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(sensorbuffer,<ref refid="main_8cpp_1ac92f70960babcaa68482b8ea681bcec8" kindref="member">sendSensorStr</ref>,propString,lightMac,lightBuffer);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart.<ref refid="classUSART_1a249b0d6967ead56f39448d4954835a27" kindref="member">writeString</ref>(sensorbuffer);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>Sensor_DS18B20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ps.<ref refid="classParseStrings_1abda18520c80670139930230a2524b964" kindref="member">getCmdProperty</ref>()==0x05){<sp/></highlight><highlight class="comment">//TempDS18B20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="794"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>DS18B20</highlight></codeline>
<codeline lineno="795"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="796"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>Get<sp/>temperature<sp/>from<sp/>the<sp/>DS18B20<sp/>temperature<sp/>sensor</highlight></codeline>
<codeline lineno="797"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="798"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>dsb[120];</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>macStr[60];</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tempStr[30];</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ds.<ref refid="classDS18B20_1a64a03b4a18a9d2b3faeb7943865055e9" kindref="member">GetSensorStringXML</ref>(tempStr);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ds.<ref refid="classDS18B20_1af18146fd823d04f5472fb305e46f02b0" kindref="member">GetMACString</ref>(macStr);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//CreateSensorMAC(macStr,stdMACpipe0,(char*)&quot;:00:05:00|&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(dsb,<ref refid="main_8cpp_1ac92f70960babcaa68482b8ea681bcec8" kindref="member">sendSensorStr</ref>,propString,macStr,tempStr);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart.<ref refid="classUSART_1a249b0d6967ead56f39448d4954835a27" kindref="member">writeString</ref>(dsb);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>Sensor_Pressure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ps.<ref refid="classParseStrings_1abda18520c80670139930230a2524b964" kindref="member">getCmdProperty</ref>()==0x06){<sp/></highlight><highlight class="comment">//Pressure</highlight></codeline>
<codeline lineno="827"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart.<ref refid="classUSART_1a249b0d6967ead56f39448d4954835a27" kindref="member">writeString</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;\\\\+end\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(<ref refid="main_8cpp_1ac19b967928c4ef5b461808cbac40840c" kindref="member">str</ref>,</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a8529b711d50e5de54deba7c6b1863d14" kindref="member">uartRX_flag</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="854"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/main.cpp"/>
  </compounddef>
</doxygen>
