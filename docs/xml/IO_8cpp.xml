<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="IO_8cpp" kind="file" language="C++">
    <compoundname>IO.cpp</compoundname>
    <includes refid="IO_8hpp" local="yes">IO.hpp</includes>
    <includes refid="I2C_8hpp" local="yes">I2C.hpp</includes>
    <includes refid="USART_8h" local="yes">USART.h</includes>
    <includes refid="SPI_8h" local="yes">SPI.h</includes>
    <incdepgraph>
      <node id="276">
        <label>IO.hpp</label>
        <link refid="IO_8hpp"/>
        <childnode refid="277" relation="include">
        </childnode>
        <childnode refid="279" relation="include">
        </childnode>
        <childnode refid="283" relation="include">
        </childnode>
      </node>
      <node id="277">
        <label>I2C.hpp</label>
        <link refid="I2C_8hpp"/>
        <childnode refid="278" relation="include">
        </childnode>
      </node>
      <node id="283">
        <label>SPI.h</label>
        <link refid="SPI_8h"/>
        <childnode refid="280" relation="include">
        </childnode>
      </node>
      <node id="275">
        <label>src/IO/IO.cpp</label>
        <link refid="IO.cpp"/>
        <childnode refid="276" relation="include">
        </childnode>
        <childnode refid="277" relation="include">
        </childnode>
        <childnode refid="279" relation="include">
        </childnode>
        <childnode refid="283" relation="include">
        </childnode>
      </node>
      <node id="280">
        <label>avr/io.h</label>
      </node>
      <node id="281">
        <label>util/delay.h</label>
      </node>
      <node id="282">
        <label>string.h</label>
      </node>
      <node id="279">
        <label>USART.h</label>
        <link refid="USART_8h"/>
        <childnode refid="280" relation="include">
        </childnode>
        <childnode refid="281" relation="include">
        </childnode>
        <childnode refid="282" relation="include">
        </childnode>
      </node>
      <node id="278">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Project: <ref refid="namespaceSensorNode" kindref="compound">SensorNode</ref></para><para><ref refid="IO_8cpp" kindref="compound">IO.cpp</ref></para><para>Created on: 25 May 2017</para><para>Author: matthias</para><para>Revision:</para><para>License: </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="22"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="IO_8hpp" kindref="compound">IO.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="I2C_8hpp" kindref="compound">I2C.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="USART_8h" kindref="compound">USART.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="SPI_8h" kindref="compound">SPI.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//namespace<sp/>IO<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classIO_1a49b27a2ee79bce0de4e3ef163cbebd30" refkind="member"><highlight class="normal"><ref refid="classIO_1a49b27a2ee79bce0de4e3ef163cbebd30" kindref="member">IO::IO</ref>()<sp/>:<sp/>uartRX_flag(0)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>Auto-generated<sp/>constructor<sp/>stub</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIO_1a441eb28753ed241386507df53bacdaad" kindref="member">spi</ref><sp/>=<sp/><ref refid="classSPI" kindref="compound">SPI</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIO_1a15d36e6764d393254ad99f8d7ec25f51" kindref="member">usart</ref><sp/>=<sp/><ref refid="classUSART" kindref="compound">USART</ref>();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIO_1a6dc46e51d3706946a6a13dd8c94cbf60" kindref="member">i2c</ref><sp/>=<sp/><ref refid="classI2C" kindref="compound">I2C</ref>();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classIO_1ad7933ecdc01630b62be377ab873fea21" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classIO_1ad7933ecdc01630b62be377ab873fea21" kindref="member">IO::USART_SetRxFlagTrue</ref>(){</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIO_1a041a386e8e27fe7486090449d2749ea2" kindref="member">uartRX_flag</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classIO_1a69cddfa296c916c81cf7480c6c7f9139" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classIO_1a69cddfa296c916c81cf7480c6c7f9139" kindref="member">IO::USART_SetRxFlagFalse</ref>(){</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIO_1a041a386e8e27fe7486090449d2749ea2" kindref="member">uartRX_flag</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classIO_1af8171de8979d317fec0a187ba087a626" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classIO_1af8171de8979d317fec0a187ba087a626" kindref="member">IO::USART_GetRxFlag</ref>(){</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classIO_1a041a386e8e27fe7486090449d2749ea2" kindref="member">uartRX_flag</ref>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classIO_1add6f3bdf0120b0d63d7b48a72e8edc1e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classIO_1add6f3bdf0120b0d63d7b48a72e8edc1e" kindref="member">IO::InitInterfaces</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIO_1a441eb28753ed241386507df53bacdaad" kindref="member">spi</ref>.<ref refid="classSPI_1a7e28e3328e32b650ead0f7640cee6e81" kindref="member">Init</ref>();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIO_1a15d36e6764d393254ad99f8d7ec25f51" kindref="member">usart</ref>.<ref refid="classUSART_1a5f8bbc3788153e13d94ece254f8ee2e7" kindref="member">initUART</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIO_1a6dc46e51d3706946a6a13dd8c94cbf60" kindref="member">i2c</ref>.<ref refid="classI2C_1ab6cd0165be5e59dfe57976f1ae4325ec" kindref="member">Init</ref>();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="classIO_1a240a25927946ea2994e271eb56948362" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classIO_1a240a25927946ea2994e271eb56948362" kindref="member">IO::USART_writeString</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="main_8cpp_1ac19b967928c4ef5b461808cbac40840c" kindref="member">str</ref>){</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIO_1a15d36e6764d393254ad99f8d7ec25f51" kindref="member">usart</ref>.<ref refid="classUSART_1a249b0d6967ead56f39448d4954835a27" kindref="member">writeString</ref>(str);</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classIO_1a00d8980cbb7e31f0583a65305dacff9e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classIO_1a1febbd3f3b0a0a482226ee1659f2f7d1" kindref="member">IO::USART_readString</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="main_8cpp_1ac19b967928c4ef5b461808cbac40840c" kindref="member">str</ref>){</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIO_1a15d36e6764d393254ad99f8d7ec25f51" kindref="member">usart</ref>.<ref refid="classUSART_1a7e56b380e59b576bbac13e60ca9ba829" kindref="member">readString</ref>(str);</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="classIO_1a1febbd3f3b0a0a482226ee1659f2f7d1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classIO_1a1febbd3f3b0a0a482226ee1659f2f7d1" kindref="member">IO::USART_readString</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*myString,uint8_t<sp/>maxLength){</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>rStr[maxLength+1];</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIO_1a15d36e6764d393254ad99f8d7ec25f51" kindref="member">usart</ref>.<ref refid="classUSART_1a7e56b380e59b576bbac13e60ca9ba829" kindref="member">readString</ref>(rStr,maxLength);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint8_t<sp/>i=0;i&lt;maxLength;i++){</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>myString[i]<sp/>=<sp/>rStr[i];</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classIO_1a04360979dfc7e8960abb4b7659257b68" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classIO_1a04360979dfc7e8960abb4b7659257b68" kindref="member">IO::USART_Flush</ref>(){</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIO_1a15d36e6764d393254ad99f8d7ec25f51" kindref="member">usart</ref>.<ref refid="classUSART_1abad4151d072782e70255f999a1451199" kindref="member">USART0_Flush</ref>();</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="classIO_1acf88aa0feccc7ba9526c232d36e368b2" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="classIO_1acf88aa0feccc7ba9526c232d36e368b2" kindref="member">IO::SPI_WriteReadbyte</ref>(uint8_t<sp/>data){</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classIO_1a441eb28753ed241386507df53bacdaad" kindref="member">spi</ref>.<ref refid="classSPI_1ad2c97b15ee0417c355a899c28d2efa5d" kindref="member">WriteReadbyte</ref>(data));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/IO/IO.cpp"/>
  </compounddef>
</doxygen>
